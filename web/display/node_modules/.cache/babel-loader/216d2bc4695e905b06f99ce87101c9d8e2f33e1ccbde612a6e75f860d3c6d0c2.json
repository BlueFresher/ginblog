{"ast":null,"code":"export default {\n  name: 'dialogView',\n  props: {\n    dialogTitle: {\n      type: String,\n      default: '标题'\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    popupWidth: {\n      type: String,\n      default: '550px'\n    }\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.visible;\n      },\n      set(val) {\n        // 当visible改变的时候，触发父组件的 updateVisible方法，在该方法中更改传入子组件的 centerDialogVisible的值\n        this.$emit('updateVisible', val);\n      }\n    }\n  },\n  methods: {\n    Cancel() {\n      this.$emit('resetPopupData');\n    },\n    Save() {\n      this.$emit('submitPopupData');\n    },\n    handleClose() {\n      this.$emit('handleClose');\n    }\n  }\n};","map":{"version":3,"mappings":"AAiCA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;IACAE;MACAH;MACAC;IACA;EACA;EACAG;IACAC;MACAC;QACA;MACA;MACAC;QACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","props","dialogTitle","type","default","visible","popupWidth","computed","dialogVisible","get","set","methods","Cancel","Save","handleClose"],"sourceRoot":"src/components/dialogView","sources":["index.vue"],"sourcesContent":["<!--\n * @Author: chaichai chaichai@cute.com\n * @Date: 2022-09-27 15:24:23\n * @LastEditors: chaichai chaichai@cute.com\n * @LastEditTime: 2022-09-27 16:26:10\n * @FilePath: \\blog3.0\\src\\components\\dialogView\\index.vue\n * @Description: \n * \n * Copyright (c) 2022 by CQUCC-4-433, All Rights Reserved. \n-->\n\n<template>\n  <!-- 封装弹框 -->\n  <div class=\"popup\">\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      :width=\"popupWidth\"\n      :before-close=\"handleClose\"\n      :append-to-body=true\n    >\n      <slot>\n        <p>弹框自定义的内容</p>\n      </slot>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <!-- <el-button @click=\"Cancel\">取 消</el-button> -->\n        <v-btn type=\"primary\" @click=\"Save\">确 定</v-btn>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name:'dialogView',\n  props: {\n    dialogTitle: {\n      type: String,\n      default: '标题'\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    popupWidth: {\n      type: String,\n      default: '550px'\n    }\n  },\n  computed: {\n    dialogVisible: {\n      get () {\n        return this.visible\n      },\n      set (val) {\n        // 当visible改变的时候，触发父组件的 updateVisible方法，在该方法中更改传入子组件的 centerDialogVisible的值\n        this.$emit('updateVisible', val)\n      }\n    }\n  },\n  methods: {\n    Cancel () {\n      this.$emit('resetPopupData')\n    },\n    Save () {\n      this.$emit('submitPopupData')\n    },\n    handleClose () {\n      this.$emit('handleClose')\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}