{"ast":null,"code":"/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n  'use strict';\n\n  var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  const isSimpleType = type => value => typeof value === type;\n  const isFunction = isSimpleType('function');\n  var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n  var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n  const option = name => editor => editor.options.get(name);\n  const register$2 = editor => {\n    const registerOption = editor.options.register;\n    registerOption('save_enablewhendirty', {\n      processor: 'boolean',\n      default: true\n    });\n    registerOption('save_onsavecallback', {\n      processor: 'function'\n    });\n    registerOption('save_oncancelcallback', {\n      processor: 'function'\n    });\n  };\n  const enableWhenDirty = option('save_enablewhendirty');\n  const getOnSaveCallback = option('save_onsavecallback');\n  const getOnCancelCallback = option('save_oncancelcallback');\n  const displayErrorMessage = (editor, message) => {\n    editor.notificationManager.open({\n      text: message,\n      type: 'error'\n    });\n  };\n  const save = editor => {\n    const formObj = global$1.DOM.getParent(editor.id, 'form');\n    if (enableWhenDirty(editor) && !editor.isDirty()) {\n      return;\n    }\n    editor.save();\n    const onSaveCallback = getOnSaveCallback(editor);\n    if (isFunction(onSaveCallback)) {\n      onSaveCallback.call(editor, editor);\n      editor.nodeChanged();\n      return;\n    }\n    if (formObj) {\n      editor.setDirty(false);\n      if (!formObj.onsubmit || formObj.onsubmit()) {\n        if (typeof formObj.submit === 'function') {\n          formObj.submit();\n        } else {\n          displayErrorMessage(editor, 'Error: Form submit field collision.');\n        }\n      }\n      editor.nodeChanged();\n    } else {\n      displayErrorMessage(editor, 'Error: No form element found.');\n    }\n  };\n  const cancel = editor => {\n    const h = global.trim(editor.startContent);\n    const onCancelCallback = getOnCancelCallback(editor);\n    if (isFunction(onCancelCallback)) {\n      onCancelCallback.call(editor, editor);\n      return;\n    }\n    editor.resetContent(h);\n  };\n  const register$1 = editor => {\n    editor.addCommand('mceSave', () => {\n      save(editor);\n    });\n    editor.addCommand('mceCancel', () => {\n      cancel(editor);\n    });\n  };\n  const stateToggle = editor => api => {\n    const handler = () => {\n      api.setEnabled(!enableWhenDirty(editor) || editor.isDirty());\n    };\n    handler();\n    editor.on('NodeChange dirty', handler);\n    return () => editor.off('NodeChange dirty', handler);\n  };\n  const register = editor => {\n    editor.ui.registry.addButton('save', {\n      icon: 'save',\n      tooltip: 'Save',\n      enabled: false,\n      onAction: () => editor.execCommand('mceSave'),\n      onSetup: stateToggle(editor)\n    });\n    editor.ui.registry.addButton('cancel', {\n      icon: 'cancel',\n      tooltip: 'Cancel',\n      enabled: false,\n      onAction: () => editor.execCommand('mceCancel'),\n      onSetup: stateToggle(editor)\n    });\n    editor.addShortcut('Meta+S', '', 'mceSave');\n  };\n  var Plugin = () => {\n    global$2.add('save', editor => {\n      register$2(editor);\n      register(editor);\n      register$1(editor);\n    });\n  };\n  Plugin();\n})();","map":{"version":3,"names":["global$2","tinymce","util","Tools","resolve","isSimpleType","type","value","isFunction","global$1","global","option","name","editor","options","get","register$2","registerOption","register","processor","default","enableWhenDirty","getOnSaveCallback","getOnCancelCallback","displayErrorMessage","message","notificationManager","open","text","save","formObj","DOM","getParent","id","isDirty","onSaveCallback","call","nodeChanged","setDirty","onsubmit","submit","cancel","h","trim","startContent","onCancelCallback","resetContent","register$1","addCommand","stateToggle","api","handler","setEnabled","on","off","ui","registry","addButton","icon","tooltip","enabled","onAction","execCommand","onSetup","addShortcut","Plugin","add"],"sources":["/home/hyq/GoHome/src/ginblog/web/admin/node_modules/tinymce/plugins/save/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n    'use strict';\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const isSimpleType = type => value => typeof value === type;\n    const isFunction = isSimpleType('function');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('save_enablewhendirty', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('save_onsavecallback', { processor: 'function' });\n      registerOption('save_oncancelcallback', { processor: 'function' });\n    };\n    const enableWhenDirty = option('save_enablewhendirty');\n    const getOnSaveCallback = option('save_onsavecallback');\n    const getOnCancelCallback = option('save_oncancelcallback');\n\n    const displayErrorMessage = (editor, message) => {\n      editor.notificationManager.open({\n        text: message,\n        type: 'error'\n      });\n    };\n    const save = editor => {\n      const formObj = global$1.DOM.getParent(editor.id, 'form');\n      if (enableWhenDirty(editor) && !editor.isDirty()) {\n        return;\n      }\n      editor.save();\n      const onSaveCallback = getOnSaveCallback(editor);\n      if (isFunction(onSaveCallback)) {\n        onSaveCallback.call(editor, editor);\n        editor.nodeChanged();\n        return;\n      }\n      if (formObj) {\n        editor.setDirty(false);\n        if (!formObj.onsubmit || formObj.onsubmit()) {\n          if (typeof formObj.submit === 'function') {\n            formObj.submit();\n          } else {\n            displayErrorMessage(editor, 'Error: Form submit field collision.');\n          }\n        }\n        editor.nodeChanged();\n      } else {\n        displayErrorMessage(editor, 'Error: No form element found.');\n      }\n    };\n    const cancel = editor => {\n      const h = global.trim(editor.startContent);\n      const onCancelCallback = getOnCancelCallback(editor);\n      if (isFunction(onCancelCallback)) {\n        onCancelCallback.call(editor, editor);\n        return;\n      }\n      editor.resetContent(h);\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mceSave', () => {\n        save(editor);\n      });\n      editor.addCommand('mceCancel', () => {\n        cancel(editor);\n      });\n    };\n\n    const stateToggle = editor => api => {\n      const handler = () => {\n        api.setEnabled(!enableWhenDirty(editor) || editor.isDirty());\n      };\n      handler();\n      editor.on('NodeChange dirty', handler);\n      return () => editor.off('NodeChange dirty', handler);\n    };\n    const register = editor => {\n      editor.ui.registry.addButton('save', {\n        icon: 'save',\n        tooltip: 'Save',\n        enabled: false,\n        onAction: () => editor.execCommand('mceSave'),\n        onSetup: stateToggle(editor)\n      });\n      editor.ui.registry.addButton('cancel', {\n        icon: 'cancel',\n        tooltip: 'Cancel',\n        enabled: false,\n        onAction: () => editor.execCommand('mceCancel'),\n        onSetup: stateToggle(editor)\n      });\n      editor.addShortcut('Meta+S', '', 'mceSave');\n    };\n\n    var Plugin = () => {\n      global$2.add('save', editor => {\n        register$2(editor);\n        register(editor);\n        register$1(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}