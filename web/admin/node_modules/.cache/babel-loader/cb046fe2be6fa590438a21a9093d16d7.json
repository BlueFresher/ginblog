{"ast":null,"code":"const columns = [{\n  title: 'ID',\n  dataIndex: 'id',\n  width: '10%',\n  key: 'id',\n  align: 'center'\n}, {\n  title: '分类名',\n  dataIndex: 'name',\n  width: '20%',\n  key: 'name',\n  align: 'center'\n}, {\n  title: '操作',\n  width: '30%',\n  key: 'action',\n  scopedSlots: {\n    customRender: 'action'\n  },\n  align: 'center'\n}];\nexport default {\n  data() {\n    return {\n      pagination: {\n        pageSizeOptions: ['5', '10', '20'],\n        pageSize: 5,\n        total: 0,\n        showSizeChanger: true,\n        showTotal: total => `共${total}条`\n      },\n      Catelist: [],\n      columns,\n      queryParam: {\n        pagesize: 5,\n        pagenum: 1\n      },\n      CateInfo: {\n        name: '',\n        id: 0\n      },\n      newCate: {\n        name: ''\n      },\n      visible: false,\n      addCateVisible: false,\n      addCateRules: {\n        name: [{\n          validator: (rule, value, callback) => {\n            if (this.newCate.name == '') {\n              callback(new Error('请输入分类名'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      },\n      CateRules: {\n        name: [{\n          validator: (rule, value, callback) => {\n            if (this.CateInfo.name == '') {\n              callback(new Error('请输入分类名'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      },\n      editCateVisible: false\n    };\n  },\n  created() {\n    this.getCateList();\n  },\n  methods: {\n    // 查询分类列表\n    async getCateList() {\n      const {\n        data: res\n      } = await this.$http.get('category', {\n        params: {\n          pagesize: this.queryParam.pagesize,\n          pagenum: this.queryParam.pagenum\n        }\n      });\n      console.log(res);\n      if (res.status != 200) return this.$message.error(res.message);\n      this.Catelist = res.data;\n      this.pagination.total = res.total;\n    },\n    // 更改分页\n    handleTableChange(pagination, filters, sorter) {\n      var pager = {\n        ...this.pagination\n      };\n      pager.current = pagination.current;\n      pager.pageSize = pagination.pageSize;\n      this.queryParam.pagesize = pagination.pageSize;\n      this.queryParam.pagenum = pagination.current;\n      if (pagination.pageSize !== this.pagination.pageSize) {\n        this.queryParam.pagenum = 1;\n        pager.current = 1;\n      }\n      this.pagination = pager;\n      this.getCateList();\n    },\n    // 删除分类\n    deleteCate(id) {\n      this.$confirm({\n        title: '提示：请再次确认',\n        content: '确认要删除该分类么？一旦删除无法恢复',\n        onOk: async () => {\n          const res = await this.$http.delete(`category/${id}`);\n          if (res.status != 200) return this.$message.error(res.message);\n          this.$message.success('删除成功');\n          this.getCateList();\n          console.log(res);\n        },\n        onCancel: () => {\n          this.$message.info('已取消删除');\n        }\n      });\n    },\n    addCateOk() {\n      this.$refs.addCateRef.validate(async valid => {\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入');\n        const {\n          data: res\n        } = await this.$http.post('category/add', {\n          name: this.newCate.name\n        });\n        // console.log(this.CateInfo.role)\n        console.log(res);\n        if (res.status != 200) return this.$message.error(res.message);\n        this.$refs.addCateRef.resetFields();\n        this.addCateVisible = false;\n        this.$message.success('添加分类成功');\n        this.getCateList();\n      });\n    },\n    addCateCancel() {\n      // if (this.$ref.addCateRef !== undefined) this.$refs.addCateRef.resetFields()\n      this.$refs.addCateRef.resetFields();\n      this.addCateVisible = false;\n      this.$message.info('新增分类已取消');\n    },\n    // 编辑用户\n    async editCate(id) {\n      this.editCateVisible = true;\n      const {\n        data: res\n      } = await this.$http.get(`category/${id}`);\n      this.CateInfo = res.data;\n      this.CateInfo.id = id;\n    },\n    editCateOk() {\n      this.$refs.editCateRef.validate(async valid => {\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入');\n        const {\n          data: res\n        } = await this.$http.put(`category/${this.CateInfo.id}`, {\n          name: this.CateInfo.name\n        });\n        // console.log(this.CateInfo.role)\n        console.log(res);\n        if (res.status != 200) return this.$message.error(res.message);\n        this.$refs.editCateRef.resetFields();\n        this.editCateVisible = false;\n        this.$message.success('更新分类信息成功');\n        this.getCateList();\n      });\n    },\n    editCateCancel(value) {\n      this.$refs.editCateRef.resetFields();\n      this.editCateVisible = false;\n      this.$message.info('编辑已取消');\n    }\n  }\n};","map":{"version":3,"mappings":"AA4DA,iBACA;EACAA;EACAC;EACAC;EACAC;EACAC;AACA,GACA;EACAJ;EACAC;EACAC;EACAC;EACAC;AACA,GACA;EACAJ;EACAE;EACAC;EACAE;IAAAC;EAAA;EACAF;AACA,EACA;AAEA;EACAG;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;MACAC;MACAC;QAEAC;QACAC;MACA;MACAC;QACAC;QACAC;MACA;MACAC;QACAF;MACA;MACAG;MACAC;MACAC;QACAL,OACA;UACAM;YACA;cACAC;YACA;cACAA;YACA;UACA;UACAC;QACA;MAEA;MACAC;QACAT,OACA;UACAM;YACA;cACAC;YACA;cACAA;YACA;UACA;UACAC;QACA;MAEA;MACAE;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACA;MACA;QAAAzB;MAAA;QACA0B;UACAhB;UACAC;QACA;MACA;MACAgB;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;QAAA;MAAA;MACAC;MACAA;MACA;MACA;MAEA;QACA;QACAA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;QACArC;QACAsC;QACAC;UACA;UACA;UACA;UACA;UACAL;QACA;QACAM;UACA;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;UAAAlC;QAAA;UACAa;QACA;QACA;QACAc;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAQ;MACA;MACA;MACA;MACA;IACA;IAEA;IACA;MACA;MACA;QAAAnC;MAAA;MACA;MACA;IACA;IACAoC;MACA;QACA;QACA;UAAApC;QAAA;UACAa;QACA;QACA;QACAc;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAU;MACA;MACA;MACA;IACA;EACA;AACA","names":["title","dataIndex","width","key","align","scopedSlots","customRender","data","pagination","pageSizeOptions","pageSize","total","showSizeChanger","showTotal","Catelist","columns","queryParam","pagesize","pagenum","CateInfo","name","id","newCate","visible","addCateVisible","addCateRules","validator","callback","trigger","CateRules","editCateVisible","created","methods","params","console","handleTableChange","pager","deleteCate","content","onOk","onCancel","addCateOk","addCateCancel","editCateOk","editCateCancel"],"sourceRoot":"src/components/category","sources":["CateList.vue"],"sourcesContent":["<template>\n    <div>\n        <h3>分类列表页面</h3>\n        <a-card>\n            <a-row :gutter=\"20\">\n                <a-col :span=\"4\">\n                    <a-button type=\"primary\" @click=\"addCateVisible = true\">新增分类</a-button>\n                </a-col>\n            </a-row>\n\n            <a-table \n                rowKey=\"id\"\n                :columns=\"columns\"\n                :pagination='pagination' \n                :dataSource=\"Catelist\"\n                bordered\n                @change=\"handleTableChange\">\n                <template slot=\"action\" slot-scope=\"data\">\n                    <div class=\"actionSlot\">\n                        <a-button type=\"primary\" icon=\"edit\" style=\"margin-right:15px\" @click=\"editCate(data.id)\">编辑</a-button>\n                        <a-button type=\"danger\" icon=\"delete\" style=\"margin-right:15px\" @click=\"deleteCate(data.id)\">删除</a-button>\n                    </div>\n                </template>\n            </a-table>\n        </a-card>\n\n        <!--新增分类区域-->\n        <a-modal\n        closable\n        title=\"新增分类\"\n        :visible=\"addCateVisible\"\n        width=\"60%\"\n        @ok=\"addCateOk\"\n        @cancel=\"addCateCancel\"\n        :destoryOnClose=\"true\">\n        <a-form-model :model=\"newCate\" :rules=\"addCateRules\" ref=\"addCateRef\">\n            <a-form-model-item label=\"分类名\" prop=\"name\">\n                <a-input v-model=\"newCate.name\"></a-input>\n            </a-form-model-item>\n        </a-form-model>\n      </a-modal>\n      <!--编辑分类区域-->\n      <a-modal\n      closable\n      title=\"编辑用户\"\n      :visible=\"editCateVisible\"\n      width=\"60%\"\n      @ok=\"editCateOk\"\n      @cancel=\"editCateCancel\"\n      :destoryOnClose=\"true\">\n      <a-form-model :model=\"CateInfo\" :rules=\"CateRules\" ref=\"editCateRef\">\n          <a-form-model-item label=\"分类名\" prop=\"name\">\n              <a-input v-model=\"CateInfo.name\"></a-input>\n          </a-form-model-item>\n      </a-form-model>\n      </a-modal>\n    </div>\n</template>\n\n<script>\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        width:'10%',\n        key: 'id',\n        align:'center',\n   },\n   {\n        title: '分类名',\n        dataIndex: 'name',\n        width:'20%',\n        key: 'name',\n        align:'center',\n   },\n   {\n        title: '操作',\n        width:'30%',\n        key: 'action',\n        scopedSlots:{customRender:'action'},\n        align:'center',\n   },\n]\n\nexport default{\n    data(){\n        return {\n            pagination:{\n                pageSizeOptions:['5', '10', '20'],\n                pageSize:5,\n                total:0,\n                showSizeChanger:true,\n                showTotal:(total)=>`共${total}条`,\n            },\n\n            Catelist:[],\n            columns,\n            queryParam:{\n\n                pagesize:5,\n                pagenum:1,\n            },\n            CateInfo:{\n                name:'',\n                id:0,\n            },\n            newCate:{\n                name:'',\n            },\n            visible: false,\n            addCateVisible: false,\n            addCateRules:{\n                name: [\n                        {\n                            validator: (rule, value, callback) => {\n                                if (this.newCate.name == '') {\n                                    callback(new Error('请输入分类名'))\n                                } else {\n                                    callback()\n                                }\n                            },\n                            trigger: 'blur',\n                        },\n                ],\n            },\n            CateRules:{\n                name: [\n                        {\n                            validator: (rule, value, callback) => {\n                                if (this.CateInfo.name == '') {\n                                    callback(new Error('请输入分类名'))\n                                } else {\n                                    callback()\n                                }\n                            },\n                            trigger: 'blur',\n                        },\n                ],\n            },\n            editCateVisible: false\n        }\n    },\n    created(){\n        this.getCateList()\n    },\n    methods:{\n        // 查询分类列表\n        async getCateList() {\n            const { data:res } = await this.$http.get('category', {\n                params:{\n                    pagesize:this.queryParam.pagesize, \n                    pagenum:this.queryParam.pagenum\n                }\n            })\n            console.log(res)\n            if (res.status != 200) return this.$message.error(res.message)\n            this.Catelist = res.data\n            this.pagination.total = res.total\n        },\n        // 更改分页\n        handleTableChange(pagination, filters, sorter) {\n            var pager = { ...this.pagination }\n            pager.current = pagination.current\n            pager.pageSize = pagination.pageSize\n            this.queryParam.pagesize = pagination.pageSize\n            this.queryParam.pagenum = pagination.current\n\n            if (pagination.pageSize !== this.pagination.pageSize) {\n                this.queryParam.pagenum = 1\n                pager.current = 1\n            }\n            this.pagination = pager\n            this.getCateList()\n        },\n        // 删除分类\n        deleteCate(id) {\n            this.$confirm({\n                title: '提示：请再次确认',\n                content: '确认要删除该分类么？一旦删除无法恢复',\n                onOk: async () => {\n                    const res = await this.$http.delete(`category/${id}`)\n                    if (res.status != 200) return this.$message.error(res.message)\n                    this.$message.success('删除成功')\n                    this.getCateList()\n                    console.log(res)\n                },\n                onCancel: () => {\n                    this.$message.info('已取消删除')\n                },\n            });\n        },\n        addCateOk(){\n            this.$refs.addCateRef.validate(async (valid) => {\n                if (!valid) return this.$message.error('参数不符合要求，请重新输入')\n                const { data: res } = await this.$http.post('category/add', {\n                name: this.newCate.name,\n                })\n                // console.log(this.CateInfo.role)\n                console.log(res)\n                if (res.status != 200) return this.$message.error(res.message)\n                this.$refs.addCateRef.resetFields()\n                this.addCateVisible = false\n                this.$message.success('添加分类成功')\n                this.getCateList()\n            })\n        },\n        addCateCancel(){\n            // if (this.$ref.addCateRef !== undefined) this.$refs.addCateRef.resetFields()\n            this.$refs.addCateRef.resetFields()\n            this.addCateVisible = false\n            this.$message.info('新增分类已取消')\n        },\n\n        // 编辑用户\n        async editCate(id) {\n            this.editCateVisible = true\n            const {data:res} = await this.$http.get(`category/${id}`)\n            this.CateInfo = res.data\n            this.CateInfo.id = id\n        },\n        editCateOk(){\n            this.$refs.editCateRef.validate(async (valid) => {\n                if (!valid) return this.$message.error('参数不符合要求，请重新输入')\n                const { data: res } = await this.$http.put(`category/${this.CateInfo.id}`, {\n                name: this.CateInfo.name,\n                })\n                // console.log(this.CateInfo.role)\n                console.log(res)\n                if (res.status != 200) return this.$message.error(res.message)\n                this.$refs.editCateRef.resetFields()\n                this.editCateVisible = false\n                this.$message.success('更新分类信息成功')\n                this.getCateList()\n            })\n        },\n        editCateCancel(value){\n            this.$refs.editCateRef.resetFields()\n            this.editCateVisible = false\n            this.$message.info('编辑已取消')\n        }\n    },\n}\n</script>\n\n<style scoped>\n.actionSlot{\n    display: flex;\n    justify-content: center;\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}