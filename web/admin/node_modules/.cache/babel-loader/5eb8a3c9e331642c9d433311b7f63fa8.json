{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n  'use strict';\n\n  var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  const getPrototypeOf = Object.getPrototypeOf;\n  const hasProto = (v, constructor, predicate) => {\n    var _a;\n    if (predicate(v, constructor.prototype)) {\n      return true;\n    } else {\n      return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n    }\n  };\n  const typeOf = x => {\n    const t = typeof x;\n    if (x === null) {\n      return 'null';\n    } else if (t === 'object' && Array.isArray(x)) {\n      return 'array';\n    } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n      return 'string';\n    } else {\n      return t;\n    }\n  };\n  const isType = type => value => typeOf(value) === type;\n  const isSimpleType = type => value => typeof value === type;\n  const eq = t => a => t === a;\n  const is = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf(o) === proto);\n  const isString = isType('string');\n  const isObject = isType('object');\n  const isPlainObject = value => is(value, Object);\n  const isArray = isType('array');\n  const isNull = eq(null);\n  const isBoolean = isSimpleType('boolean');\n  const isNullable = a => a === null || a === undefined;\n  const isNonNullable = a => !isNullable(a);\n  const isFunction = isSimpleType('function');\n  const isNumber = isSimpleType('number');\n  const isArrayOf = (value, pred) => {\n    if (isArray(value)) {\n      for (let i = 0, len = value.length; i < len; ++i) {\n        if (!pred(value[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  };\n  const noop = () => {};\n  class Optional {\n    constructor(tag, value) {\n      this.tag = tag;\n      this.value = value;\n    }\n    static some(value) {\n      return new Optional(true, value);\n    }\n    static none() {\n      return Optional.singletonNone;\n    }\n    fold(onNone, onSome) {\n      if (this.tag) {\n        return onSome(this.value);\n      } else {\n        return onNone();\n      }\n    }\n    isSome() {\n      return this.tag;\n    }\n    isNone() {\n      return !this.tag;\n    }\n    map(mapper) {\n      if (this.tag) {\n        return Optional.some(mapper(this.value));\n      } else {\n        return Optional.none();\n      }\n    }\n    bind(binder) {\n      if (this.tag) {\n        return binder(this.value);\n      } else {\n        return Optional.none();\n      }\n    }\n    exists(predicate) {\n      return this.tag && predicate(this.value);\n    }\n    forall(predicate) {\n      return !this.tag || predicate(this.value);\n    }\n    filter(predicate) {\n      if (!this.tag || predicate(this.value)) {\n        return this;\n      } else {\n        return Optional.none();\n      }\n    }\n    getOr(replacement) {\n      return this.tag ? this.value : replacement;\n    }\n    or(replacement) {\n      return this.tag ? this : replacement;\n    }\n    getOrThunk(thunk) {\n      return this.tag ? this.value : thunk();\n    }\n    orThunk(thunk) {\n      return this.tag ? this : thunk();\n    }\n    getOrDie(message) {\n      if (!this.tag) {\n        throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n      } else {\n        return this.value;\n      }\n    }\n    static from(value) {\n      return isNonNullable(value) ? Optional.some(value) : Optional.none();\n    }\n    getOrNull() {\n      return this.tag ? this.value : null;\n    }\n    getOrUndefined() {\n      return this.value;\n    }\n    each(worker) {\n      if (this.tag) {\n        worker(this.value);\n      }\n    }\n    toArray() {\n      return this.tag ? [this.value] : [];\n    }\n    toString() {\n      return this.tag ? `some(${this.value})` : 'none()';\n    }\n  }\n  Optional.singletonNone = new Optional(false);\n  const keys = Object.keys;\n  const hasOwnProperty = Object.hasOwnProperty;\n  const each = (obj, f) => {\n    const props = keys(obj);\n    for (let k = 0, len = props.length; k < len; k++) {\n      const i = props[k];\n      const x = obj[i];\n      f(x, i);\n    }\n  };\n  const objAcc = r => (x, i) => {\n    r[i] = x;\n  };\n  const internalFilter = (obj, pred, onTrue, onFalse) => {\n    each(obj, (x, i) => {\n      (pred(x, i) ? onTrue : onFalse)(x, i);\n    });\n  };\n  const filter = (obj, pred) => {\n    const t = {};\n    internalFilter(obj, pred, objAcc(t), noop);\n    return t;\n  };\n  const has = (obj, key) => hasOwnProperty.call(obj, key);\n  const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n  const nativePush = Array.prototype.push;\n  const flatten = xs => {\n    const r = [];\n    for (let i = 0, len = xs.length; i < len; ++i) {\n      if (!isArray(xs[i])) {\n        throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n      }\n      nativePush.apply(r, xs[i]);\n    }\n    return r;\n  };\n  const get = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n  const head = xs => get(xs, 0);\n  const findMap = (arr, f) => {\n    for (let i = 0; i < arr.length; i++) {\n      const r = f(arr[i], i);\n      if (r.isSome()) {\n        return r;\n      }\n    }\n    return Optional.none();\n  };\n  typeof window !== 'undefined' ? window : Function('return this;')();\n  const rawSet = (dom, key, value) => {\n    if (isString(value) || isBoolean(value) || isNumber(value)) {\n      dom.setAttribute(key, value + '');\n    } else {\n      console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n      throw new Error('Attribute value was not simple');\n    }\n  };\n  const set = (element, key, value) => {\n    rawSet(element.dom, key, value);\n  };\n  const remove = (element, key) => {\n    element.dom.removeAttribute(key);\n  };\n  const fromHtml = (html, scope) => {\n    const doc = scope || document;\n    const div = doc.createElement('div');\n    div.innerHTML = html;\n    if (!div.hasChildNodes() || div.childNodes.length > 1) {\n      const message = 'HTML does not have a single root node';\n      console.error(message, html);\n      throw new Error(message);\n    }\n    return fromDom(div.childNodes[0]);\n  };\n  const fromTag = (tag, scope) => {\n    const doc = scope || document;\n    const node = doc.createElement(tag);\n    return fromDom(node);\n  };\n  const fromText = (text, scope) => {\n    const doc = scope || document;\n    const node = doc.createTextNode(text);\n    return fromDom(node);\n  };\n  const fromDom = node => {\n    if (node === null || node === undefined) {\n      throw new Error('Node cannot be null or undefined');\n    }\n    return {\n      dom: node\n    };\n  };\n  const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n  const SugarElement = {\n    fromHtml,\n    fromTag,\n    fromText,\n    fromDom,\n    fromPoint\n  };\n  var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n  var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n  const isNotEmpty = s => s.length > 0;\n  const option = name => editor => editor.options.get(name);\n  const register$2 = editor => {\n    const registerOption = editor.options.register;\n    registerOption('image_dimensions', {\n      processor: 'boolean',\n      default: true\n    });\n    registerOption('image_advtab', {\n      processor: 'boolean',\n      default: false\n    });\n    registerOption('image_uploadtab', {\n      processor: 'boolean',\n      default: true\n    });\n    registerOption('image_prepend_url', {\n      processor: 'string',\n      default: ''\n    });\n    registerOption('image_class_list', {\n      processor: 'object[]'\n    });\n    registerOption('image_description', {\n      processor: 'boolean',\n      default: true\n    });\n    registerOption('image_title', {\n      processor: 'boolean',\n      default: false\n    });\n    registerOption('image_caption', {\n      processor: 'boolean',\n      default: false\n    });\n    registerOption('image_list', {\n      processor: value => {\n        const valid = value === false || isString(value) || isArrayOf(value, isObject) || isFunction(value);\n        return valid ? {\n          value,\n          valid\n        } : {\n          valid: false,\n          message: 'Must be false, a string, an array or a function.'\n        };\n      },\n      default: false\n    });\n  };\n  const hasDimensions = option('image_dimensions');\n  const hasAdvTab = option('image_advtab');\n  const hasUploadTab = option('image_uploadtab');\n  const getPrependUrl = option('image_prepend_url');\n  const getClassList = option('image_class_list');\n  const hasDescription = option('image_description');\n  const hasImageTitle = option('image_title');\n  const hasImageCaption = option('image_caption');\n  const getImageList = option('image_list');\n  const showAccessibilityOptions = option('a11y_advanced_options');\n  const isAutomaticUploadsEnabled = option('automatic_uploads');\n  const hasUploadUrl = editor => isNotEmpty(editor.options.get('images_upload_url'));\n  const hasUploadHandler = editor => isNonNullable(editor.options.get('images_upload_handler'));\n  const parseIntAndGetMax = (val1, val2) => Math.max(parseInt(val1, 10), parseInt(val2, 10));\n  const getImageSize = url => new Promise(callback => {\n    const img = document.createElement('img');\n    const done = dimensions => {\n      img.onload = img.onerror = null;\n      if (img.parentNode) {\n        img.parentNode.removeChild(img);\n      }\n      callback(dimensions);\n    };\n    img.onload = () => {\n      const width = parseIntAndGetMax(img.width, img.clientWidth);\n      const height = parseIntAndGetMax(img.height, img.clientHeight);\n      const dimensions = {\n        width,\n        height\n      };\n      done(Promise.resolve(dimensions));\n    };\n    img.onerror = () => {\n      done(Promise.reject(`Failed to get image dimensions for: ${url}`));\n    };\n    const style = img.style;\n    style.visibility = 'hidden';\n    style.position = 'fixed';\n    style.bottom = style.left = '0px';\n    style.width = style.height = 'auto';\n    document.body.appendChild(img);\n    img.src = url;\n  });\n  const removePixelSuffix = value => {\n    if (value) {\n      value = value.replace(/px$/, '');\n    }\n    return value;\n  };\n  const addPixelSuffix = value => {\n    if (value.length > 0 && /^[0-9]+$/.test(value)) {\n      value += 'px';\n    }\n    return value;\n  };\n  const mergeMargins = css => {\n    if (css.margin) {\n      const splitMargin = String(css.margin).split(' ');\n      switch (splitMargin.length) {\n        case 1:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[0];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[0];\n          break;\n        case 2:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 3:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 4:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[3];\n      }\n      delete css.margin;\n    }\n    return css;\n  };\n  const createImageList = (editor, callback) => {\n    const imageList = getImageList(editor);\n    if (isString(imageList)) {\n      fetch(imageList).then(res => {\n        if (res.ok) {\n          res.json().then(callback);\n        }\n      });\n    } else if (isFunction(imageList)) {\n      imageList(callback);\n    } else {\n      callback(imageList);\n    }\n  };\n  const waitLoadImage = (editor, data, imgElm) => {\n    const selectImage = () => {\n      imgElm.onload = imgElm.onerror = null;\n      if (editor.selection) {\n        editor.selection.select(imgElm);\n        editor.nodeChanged();\n      }\n    };\n    imgElm.onload = () => {\n      if (!data.width && !data.height && hasDimensions(editor)) {\n        editor.dom.setAttribs(imgElm, {\n          width: String(imgElm.clientWidth),\n          height: String(imgElm.clientHeight)\n        });\n      }\n      selectImage();\n    };\n    imgElm.onerror = selectImage;\n  };\n  const blobToDataUri = blob => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      var _a;\n      reject((_a = reader.error) === null || _a === void 0 ? void 0 : _a.message);\n    };\n    reader.readAsDataURL(blob);\n  });\n  const isPlaceholderImage = imgElm => imgElm.nodeName === 'IMG' && (imgElm.hasAttribute('data-mce-object') || imgElm.hasAttribute('data-mce-placeholder'));\n  const isSafeImageUrl = (editor, src) => {\n    const getOption = editor.options.get;\n    return global$2.isDomSafe(src, 'img', {\n      allow_html_data_urls: getOption('allow_html_data_urls'),\n      allow_script_urls: getOption('allow_script_urls'),\n      allow_svg_data_urls: getOption('allow_svg_data_urls')\n    });\n  };\n  const DOM = global$3.DOM;\n  const getHspace = image => {\n    if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n      return removePixelSuffix(image.style.marginLeft);\n    } else {\n      return '';\n    }\n  };\n  const getVspace = image => {\n    if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n      return removePixelSuffix(image.style.marginTop);\n    } else {\n      return '';\n    }\n  };\n  const getBorder = image => {\n    if (image.style.borderWidth) {\n      return removePixelSuffix(image.style.borderWidth);\n    } else {\n      return '';\n    }\n  };\n  const getAttrib = (image, name) => {\n    var _a;\n    if (image.hasAttribute(name)) {\n      return (_a = image.getAttribute(name)) !== null && _a !== void 0 ? _a : '';\n    } else {\n      return '';\n    }\n  };\n  const hasCaption = image => image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n  const updateAttrib = (image, name, value) => {\n    if (value === '' || value === null) {\n      image.removeAttribute(name);\n    } else {\n      image.setAttribute(name, value);\n    }\n  };\n  const wrapInFigure = image => {\n    const figureElm = DOM.create('figure', {\n      class: 'image'\n    });\n    DOM.insertAfter(figureElm, image);\n    figureElm.appendChild(image);\n    figureElm.appendChild(DOM.create('figcaption', {\n      contentEditable: 'true'\n    }, 'Caption'));\n    figureElm.contentEditable = 'false';\n  };\n  const removeFigure = image => {\n    const figureElm = image.parentNode;\n    if (isNonNullable(figureElm)) {\n      DOM.insertAfter(image, figureElm);\n      DOM.remove(figureElm);\n    }\n  };\n  const toggleCaption = image => {\n    if (hasCaption(image)) {\n      removeFigure(image);\n    } else {\n      wrapInFigure(image);\n    }\n  };\n  const normalizeStyle = (image, normalizeCss) => {\n    const attrValue = image.getAttribute('style');\n    const value = normalizeCss(attrValue !== null ? attrValue : '');\n    if (value.length > 0) {\n      image.setAttribute('style', value);\n      image.setAttribute('data-mce-style', value);\n    } else {\n      image.removeAttribute('style');\n    }\n  };\n  const setSize = (name, normalizeCss) => (image, name, value) => {\n    const styles = image.style;\n    if (styles[name]) {\n      styles[name] = addPixelSuffix(value);\n      normalizeStyle(image, normalizeCss);\n    } else {\n      updateAttrib(image, name, value);\n    }\n  };\n  const getSize = (image, name) => {\n    if (image.style[name]) {\n      return removePixelSuffix(image.style[name]);\n    } else {\n      return getAttrib(image, name);\n    }\n  };\n  const setHspace = (image, value) => {\n    const pxValue = addPixelSuffix(value);\n    image.style.marginLeft = pxValue;\n    image.style.marginRight = pxValue;\n  };\n  const setVspace = (image, value) => {\n    const pxValue = addPixelSuffix(value);\n    image.style.marginTop = pxValue;\n    image.style.marginBottom = pxValue;\n  };\n  const setBorder = (image, value) => {\n    const pxValue = addPixelSuffix(value);\n    image.style.borderWidth = pxValue;\n  };\n  const setBorderStyle = (image, value) => {\n    image.style.borderStyle = value;\n  };\n  const getBorderStyle = image => {\n    var _a;\n    return (_a = image.style.borderStyle) !== null && _a !== void 0 ? _a : '';\n  };\n  const isFigure = elm => isNonNullable(elm) && elm.nodeName === 'FIGURE';\n  const isImage = elm => elm.nodeName === 'IMG';\n  const getIsDecorative = image => DOM.getAttrib(image, 'alt').length === 0 && DOM.getAttrib(image, 'role') === 'presentation';\n  const getAlt = image => {\n    if (getIsDecorative(image)) {\n      return '';\n    } else {\n      return getAttrib(image, 'alt');\n    }\n  };\n  const defaultData = () => ({\n    src: '',\n    alt: '',\n    title: '',\n    width: '',\n    height: '',\n    class: '',\n    style: '',\n    caption: false,\n    hspace: '',\n    vspace: '',\n    border: '',\n    borderStyle: '',\n    isDecorative: false\n  });\n  const getStyleValue = (normalizeCss, data) => {\n    var _a;\n    const image = document.createElement('img');\n    updateAttrib(image, 'style', data.style);\n    if (getHspace(image) || data.hspace !== '') {\n      setHspace(image, data.hspace);\n    }\n    if (getVspace(image) || data.vspace !== '') {\n      setVspace(image, data.vspace);\n    }\n    if (getBorder(image) || data.border !== '') {\n      setBorder(image, data.border);\n    }\n    if (getBorderStyle(image) || data.borderStyle !== '') {\n      setBorderStyle(image, data.borderStyle);\n    }\n    return normalizeCss((_a = image.getAttribute('style')) !== null && _a !== void 0 ? _a : '');\n  };\n  const create = (normalizeCss, data) => {\n    const image = document.createElement('img');\n    write(normalizeCss, {\n      ...data,\n      caption: false\n    }, image);\n    setAlt(image, data.alt, data.isDecorative);\n    if (data.caption) {\n      const figure = DOM.create('figure', {\n        class: 'image'\n      });\n      figure.appendChild(image);\n      figure.appendChild(DOM.create('figcaption', {\n        contentEditable: 'true'\n      }, 'Caption'));\n      figure.contentEditable = 'false';\n      return figure;\n    } else {\n      return image;\n    }\n  };\n  const read = (normalizeCss, image) => ({\n    src: getAttrib(image, 'src'),\n    alt: getAlt(image),\n    title: getAttrib(image, 'title'),\n    width: getSize(image, 'width'),\n    height: getSize(image, 'height'),\n    class: getAttrib(image, 'class'),\n    style: normalizeCss(getAttrib(image, 'style')),\n    caption: hasCaption(image),\n    hspace: getHspace(image),\n    vspace: getVspace(image),\n    border: getBorder(image),\n    borderStyle: getBorderStyle(image),\n    isDecorative: getIsDecorative(image)\n  });\n  const updateProp = (image, oldData, newData, name, set) => {\n    if (newData[name] !== oldData[name]) {\n      set(image, name, String(newData[name]));\n    }\n  };\n  const setAlt = (image, alt, isDecorative) => {\n    if (isDecorative) {\n      DOM.setAttrib(image, 'role', 'presentation');\n      const sugarImage = SugarElement.fromDom(image);\n      set(sugarImage, 'alt', '');\n    } else {\n      if (isNull(alt)) {\n        const sugarImage = SugarElement.fromDom(image);\n        remove(sugarImage, 'alt');\n      } else {\n        const sugarImage = SugarElement.fromDom(image);\n        set(sugarImage, 'alt', alt);\n      }\n      if (DOM.getAttrib(image, 'role') === 'presentation') {\n        DOM.setAttrib(image, 'role', '');\n      }\n    }\n  };\n  const updateAlt = (image, oldData, newData) => {\n    if (newData.alt !== oldData.alt || newData.isDecorative !== oldData.isDecorative) {\n      setAlt(image, newData.alt, newData.isDecorative);\n    }\n  };\n  const normalized = (set, normalizeCss) => (image, name, value) => {\n    set(image, value);\n    normalizeStyle(image, normalizeCss);\n  };\n  const write = (normalizeCss, newData, image) => {\n    const oldData = read(normalizeCss, image);\n    updateProp(image, oldData, newData, 'caption', (image, _name, _value) => toggleCaption(image));\n    updateProp(image, oldData, newData, 'src', updateAttrib);\n    updateProp(image, oldData, newData, 'title', updateAttrib);\n    updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n    updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n    updateProp(image, oldData, newData, 'class', updateAttrib);\n    updateProp(image, oldData, newData, 'style', normalized((image, value) => updateAttrib(image, 'style', value), normalizeCss));\n    updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n    updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n    updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n    updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n    updateAlt(image, oldData, newData);\n  };\n  const normalizeCss$1 = (editor, cssText) => {\n    const css = editor.dom.styles.parse(cssText);\n    const mergedCss = mergeMargins(css);\n    const compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n    return editor.dom.styles.serialize(compressed);\n  };\n  const getSelectedImage = editor => {\n    const imgElm = editor.selection.getNode();\n    const figureElm = editor.dom.getParent(imgElm, 'figure.image');\n    if (figureElm) {\n      return editor.dom.select('img', figureElm)[0];\n    }\n    if (imgElm && (imgElm.nodeName !== 'IMG' || isPlaceholderImage(imgElm))) {\n      return null;\n    }\n    return imgElm;\n  };\n  const splitTextBlock = (editor, figure) => {\n    var _a;\n    const dom = editor.dom;\n    const textBlockElements = filter(editor.schema.getTextBlockElements(), (_, parentElm) => !editor.schema.isValidChild(parentElm, 'figure'));\n    const textBlock = dom.getParent(figure.parentNode, node => hasNonNullableKey(textBlockElements, node.nodeName), editor.getBody());\n    if (textBlock) {\n      return (_a = dom.split(textBlock, figure)) !== null && _a !== void 0 ? _a : figure;\n    } else {\n      return figure;\n    }\n  };\n  const readImageDataFromSelection = editor => {\n    const image = getSelectedImage(editor);\n    return image ? read(css => normalizeCss$1(editor, css), image) : defaultData();\n  };\n  const insertImageAtCaret = (editor, data) => {\n    const elm = create(css => normalizeCss$1(editor, css), data);\n    editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n    editor.focus();\n    editor.selection.setContent(elm.outerHTML);\n    const insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n    editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n    if (isFigure(insertedElm)) {\n      const figure = splitTextBlock(editor, insertedElm);\n      editor.selection.select(figure);\n    } else {\n      editor.selection.select(insertedElm);\n    }\n  };\n  const syncSrcAttr = (editor, image) => {\n    editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n  };\n  const deleteImage = (editor, image) => {\n    if (image) {\n      const elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n      editor.dom.remove(elm);\n      editor.focus();\n      editor.nodeChanged();\n      if (editor.dom.isEmpty(editor.getBody())) {\n        editor.setContent('');\n        editor.selection.setCursorLocation();\n      }\n    }\n  };\n  const writeImageDataToSelection = (editor, data) => {\n    const image = getSelectedImage(editor);\n    if (image) {\n      write(css => normalizeCss$1(editor, css), data, image);\n      syncSrcAttr(editor, image);\n      if (isFigure(image.parentNode)) {\n        const figure = image.parentNode;\n        splitTextBlock(editor, figure);\n        editor.selection.select(image.parentNode);\n      } else {\n        editor.selection.select(image);\n        waitLoadImage(editor, data, image);\n      }\n    }\n  };\n  const sanitizeImageData = (editor, data) => {\n    const src = data.src;\n    return {\n      ...data,\n      src: isSafeImageUrl(editor, src) ? src : ''\n    };\n  };\n  const insertOrUpdateImage = (editor, partialData) => {\n    const image = getSelectedImage(editor);\n    if (image) {\n      const selectedImageData = read(css => normalizeCss$1(editor, css), image);\n      const data = {\n        ...selectedImageData,\n        ...partialData\n      };\n      const sanitizedData = sanitizeImageData(editor, data);\n      if (data.src) {\n        writeImageDataToSelection(editor, sanitizedData);\n      } else {\n        deleteImage(editor, image);\n      }\n    } else if (partialData.src) {\n      insertImageAtCaret(editor, {\n        ...defaultData(),\n        ...partialData\n      });\n    }\n  };\n  const deep = (old, nu) => {\n    const bothObjects = isPlainObject(old) && isPlainObject(nu);\n    return bothObjects ? deepMerge(old, nu) : nu;\n  };\n  const baseMerge = merger => {\n    return (...objects) => {\n      if (objects.length === 0) {\n        throw new Error(`Can't merge zero objects`);\n      }\n      const ret = {};\n      for (let j = 0; j < objects.length; j++) {\n        const curObject = objects[j];\n        for (const key in curObject) {\n          if (has(curObject, key)) {\n            ret[key] = merger(ret[key], curObject[key]);\n          }\n        }\n      }\n      return ret;\n    };\n  };\n  const deepMerge = baseMerge(deep);\n  var global$1 = tinymce.util.Tools.resolve('tinymce.util.ImageUploader');\n  var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n  const getValue = item => isString(item.value) ? item.value : '';\n  const getText = item => {\n    if (isString(item.text)) {\n      return item.text;\n    } else if (isString(item.title)) {\n      return item.title;\n    } else {\n      return '';\n    }\n  };\n  const sanitizeList = (list, extractValue) => {\n    const out = [];\n    global.each(list, item => {\n      const text = getText(item);\n      if (item.menu !== undefined) {\n        const items = sanitizeList(item.menu, extractValue);\n        out.push({\n          text,\n          items\n        });\n      } else {\n        const value = extractValue(item);\n        out.push({\n          text,\n          value\n        });\n      }\n    });\n    return out;\n  };\n  const sanitizer = (extractor = getValue) => list => {\n    if (list) {\n      return Optional.from(list).map(list => sanitizeList(list, extractor));\n    } else {\n      return Optional.none();\n    }\n  };\n  const sanitize = list => sanitizer(getValue)(list);\n  const isGroup = item => has(item, 'items');\n  const findEntryDelegate = (list, value) => findMap(list, item => {\n    if (isGroup(item)) {\n      return findEntryDelegate(item.items, value);\n    } else if (item.value === value) {\n      return Optional.some(item);\n    } else {\n      return Optional.none();\n    }\n  });\n  const findEntry = (optList, value) => optList.bind(list => findEntryDelegate(list, value));\n  const ListUtils = {\n    sanitizer,\n    sanitize,\n    findEntry\n  };\n  const makeTab$2 = _info => ({\n    title: 'Advanced',\n    name: 'advanced',\n    items: [{\n      type: 'grid',\n      columns: 2,\n      items: [{\n        type: 'input',\n        label: 'Vertical space',\n        name: 'vspace',\n        inputMode: 'numeric'\n      }, {\n        type: 'input',\n        label: 'Horizontal space',\n        name: 'hspace',\n        inputMode: 'numeric'\n      }, {\n        type: 'input',\n        label: 'Border width',\n        name: 'border',\n        inputMode: 'numeric'\n      }, {\n        type: 'listbox',\n        name: 'borderstyle',\n        label: 'Border style',\n        items: [{\n          text: 'Select...',\n          value: ''\n        }, {\n          text: 'Solid',\n          value: 'solid'\n        }, {\n          text: 'Dotted',\n          value: 'dotted'\n        }, {\n          text: 'Dashed',\n          value: 'dashed'\n        }, {\n          text: 'Double',\n          value: 'double'\n        }, {\n          text: 'Groove',\n          value: 'groove'\n        }, {\n          text: 'Ridge',\n          value: 'ridge'\n        }, {\n          text: 'Inset',\n          value: 'inset'\n        }, {\n          text: 'Outset',\n          value: 'outset'\n        }, {\n          text: 'None',\n          value: 'none'\n        }, {\n          text: 'Hidden',\n          value: 'hidden'\n        }]\n      }]\n    }]\n  });\n  const AdvTab = {\n    makeTab: makeTab$2\n  };\n  const collect = editor => {\n    const urlListSanitizer = ListUtils.sanitizer(item => editor.convertURL(item.value || item.url || '', 'src'));\n    const futureImageList = new Promise(completer => {\n      createImageList(editor, imageList => {\n        completer(urlListSanitizer(imageList).map(items => flatten([[{\n          text: 'None',\n          value: ''\n        }], items])));\n      });\n    });\n    const classList = ListUtils.sanitize(getClassList(editor));\n    const hasAdvTab$1 = hasAdvTab(editor);\n    const hasUploadTab$1 = hasUploadTab(editor);\n    const hasUploadUrl$1 = hasUploadUrl(editor);\n    const hasUploadHandler$1 = hasUploadHandler(editor);\n    const image = readImageDataFromSelection(editor);\n    const hasDescription$1 = hasDescription(editor);\n    const hasImageTitle$1 = hasImageTitle(editor);\n    const hasDimensions$1 = hasDimensions(editor);\n    const hasImageCaption$1 = hasImageCaption(editor);\n    const hasAccessibilityOptions = showAccessibilityOptions(editor);\n    const automaticUploads = isAutomaticUploadsEnabled(editor);\n    const prependURL = Optional.some(getPrependUrl(editor)).filter(preUrl => isString(preUrl) && preUrl.length > 0);\n    return futureImageList.then(imageList => ({\n      image,\n      imageList,\n      classList,\n      hasAdvTab: hasAdvTab$1,\n      hasUploadTab: hasUploadTab$1,\n      hasUploadUrl: hasUploadUrl$1,\n      hasUploadHandler: hasUploadHandler$1,\n      hasDescription: hasDescription$1,\n      hasImageTitle: hasImageTitle$1,\n      hasDimensions: hasDimensions$1,\n      hasImageCaption: hasImageCaption$1,\n      prependURL,\n      hasAccessibilityOptions,\n      automaticUploads\n    }));\n  };\n  const makeItems = info => {\n    const imageUrl = {\n      name: 'src',\n      type: 'urlinput',\n      filetype: 'image',\n      label: 'Source'\n    };\n    const imageList = info.imageList.map(items => ({\n      name: 'images',\n      type: 'listbox',\n      label: 'Image list',\n      items\n    }));\n    const imageDescription = {\n      name: 'alt',\n      type: 'input',\n      label: 'Alternative description',\n      enabled: !(info.hasAccessibilityOptions && info.image.isDecorative)\n    };\n    const imageTitle = {\n      name: 'title',\n      type: 'input',\n      label: 'Image title'\n    };\n    const imageDimensions = {\n      name: 'dimensions',\n      type: 'sizeinput'\n    };\n    const isDecorative = {\n      type: 'label',\n      label: 'Accessibility',\n      items: [{\n        name: 'isDecorative',\n        type: 'checkbox',\n        label: 'Image is decorative'\n      }]\n    };\n    const classList = info.classList.map(items => ({\n      name: 'classes',\n      type: 'listbox',\n      label: 'Class',\n      items\n    }));\n    const caption = {\n      type: 'label',\n      label: 'Caption',\n      items: [{\n        type: 'checkbox',\n        name: 'caption',\n        label: 'Show caption'\n      }]\n    };\n    const getDialogContainerType = useColumns => useColumns ? {\n      type: 'grid',\n      columns: 2\n    } : {\n      type: 'panel'\n    };\n    return flatten([[imageUrl], imageList.toArray(), info.hasAccessibilityOptions && info.hasDescription ? [isDecorative] : [], info.hasDescription ? [imageDescription] : [], info.hasImageTitle ? [imageTitle] : [], info.hasDimensions ? [imageDimensions] : [], [{\n      ...getDialogContainerType(info.classList.isSome() && info.hasImageCaption),\n      items: flatten([classList.toArray(), info.hasImageCaption ? [caption] : []])\n    }]]);\n  };\n  const makeTab$1 = info => ({\n    title: 'General',\n    name: 'general',\n    items: makeItems(info)\n  });\n  const MainTab = {\n    makeTab: makeTab$1,\n    makeItems\n  };\n  const makeTab = _info => {\n    const items = [{\n      type: 'dropzone',\n      name: 'fileinput'\n    }];\n    return {\n      title: 'Upload',\n      name: 'upload',\n      items\n    };\n  };\n  const UploadTab = {\n    makeTab\n  };\n  const createState = info => ({\n    prevImage: ListUtils.findEntry(info.imageList, info.image.src),\n    prevAlt: info.image.alt,\n    open: true\n  });\n  const fromImageData = image => ({\n    src: {\n      value: image.src,\n      meta: {}\n    },\n    images: image.src,\n    alt: image.alt,\n    title: image.title,\n    dimensions: {\n      width: image.width,\n      height: image.height\n    },\n    classes: image.class,\n    caption: image.caption,\n    style: image.style,\n    vspace: image.vspace,\n    border: image.border,\n    hspace: image.hspace,\n    borderstyle: image.borderStyle,\n    fileinput: [],\n    isDecorative: image.isDecorative\n  });\n  const toImageData = (data, removeEmptyAlt) => ({\n    src: data.src.value,\n    alt: (data.alt === null || data.alt.length === 0) && removeEmptyAlt ? null : data.alt,\n    title: data.title,\n    width: data.dimensions.width,\n    height: data.dimensions.height,\n    class: data.classes,\n    style: data.style,\n    caption: data.caption,\n    hspace: data.hspace,\n    vspace: data.vspace,\n    border: data.border,\n    borderStyle: data.borderstyle,\n    isDecorative: data.isDecorative\n  });\n  const addPrependUrl2 = (info, srcURL) => {\n    if (!/^(?:[a-zA-Z]+:)?\\/\\//.test(srcURL)) {\n      return info.prependURL.bind(prependUrl => {\n        if (srcURL.substring(0, prependUrl.length) !== prependUrl) {\n          return Optional.some(prependUrl + srcURL);\n        }\n        return Optional.none();\n      });\n    }\n    return Optional.none();\n  };\n  const addPrependUrl = (info, api) => {\n    const data = api.getData();\n    addPrependUrl2(info, data.src.value).each(srcURL => {\n      api.setData({\n        src: {\n          value: srcURL,\n          meta: data.src.meta\n        }\n      });\n    });\n  };\n  const formFillFromMeta2 = (info, data, meta) => {\n    if (info.hasDescription && isString(meta.alt)) {\n      data.alt = meta.alt;\n    }\n    if (info.hasAccessibilityOptions) {\n      data.isDecorative = meta.isDecorative || data.isDecorative || false;\n    }\n    if (info.hasImageTitle && isString(meta.title)) {\n      data.title = meta.title;\n    }\n    if (info.hasDimensions) {\n      if (isString(meta.width)) {\n        data.dimensions.width = meta.width;\n      }\n      if (isString(meta.height)) {\n        data.dimensions.height = meta.height;\n      }\n    }\n    if (isString(meta.class)) {\n      ListUtils.findEntry(info.classList, meta.class).each(entry => {\n        data.classes = entry.value;\n      });\n    }\n    if (info.hasImageCaption) {\n      if (isBoolean(meta.caption)) {\n        data.caption = meta.caption;\n      }\n    }\n    if (info.hasAdvTab) {\n      if (isString(meta.style)) {\n        data.style = meta.style;\n      }\n      if (isString(meta.vspace)) {\n        data.vspace = meta.vspace;\n      }\n      if (isString(meta.border)) {\n        data.border = meta.border;\n      }\n      if (isString(meta.hspace)) {\n        data.hspace = meta.hspace;\n      }\n      if (isString(meta.borderstyle)) {\n        data.borderstyle = meta.borderstyle;\n      }\n    }\n  };\n  const formFillFromMeta = (info, api) => {\n    const data = api.getData();\n    const meta = data.src.meta;\n    if (meta !== undefined) {\n      const newData = deepMerge({}, data);\n      formFillFromMeta2(info, newData, meta);\n      api.setData(newData);\n    }\n  };\n  const calculateImageSize = (helpers, info, state, api) => {\n    const data = api.getData();\n    const url = data.src.value;\n    const meta = data.src.meta || {};\n    if (!meta.width && !meta.height && info.hasDimensions) {\n      if (isNotEmpty(url)) {\n        helpers.imageSize(url).then(size => {\n          if (state.open) {\n            api.setData({\n              dimensions: size\n            });\n          }\n        }).catch(e => console.error(e));\n      } else {\n        api.setData({\n          dimensions: {\n            width: '',\n            height: ''\n          }\n        });\n      }\n    }\n  };\n  const updateImagesDropdown = (info, state, api) => {\n    const data = api.getData();\n    const image = ListUtils.findEntry(info.imageList, data.src.value);\n    state.prevImage = image;\n    api.setData({\n      images: image.map(entry => entry.value).getOr('')\n    });\n  };\n  const changeSrc = (helpers, info, state, api) => {\n    addPrependUrl(info, api);\n    formFillFromMeta(info, api);\n    calculateImageSize(helpers, info, state, api);\n    updateImagesDropdown(info, state, api);\n  };\n  const changeImages = (helpers, info, state, api) => {\n    const data = api.getData();\n    const image = ListUtils.findEntry(info.imageList, data.images);\n    image.each(img => {\n      const updateAlt = data.alt === '' || state.prevImage.map(image => image.text === data.alt).getOr(false);\n      if (updateAlt) {\n        if (img.value === '') {\n          api.setData({\n            src: img,\n            alt: state.prevAlt\n          });\n        } else {\n          api.setData({\n            src: img,\n            alt: img.text\n          });\n        }\n      } else {\n        api.setData({\n          src: img\n        });\n      }\n    });\n    state.prevImage = image;\n    changeSrc(helpers, info, state, api);\n  };\n  const changeFileInput = (helpers, info, state, api) => {\n    const data = api.getData();\n    api.block('Uploading image');\n    head(data.fileinput).fold(() => {\n      api.unblock();\n    }, file => {\n      const blobUri = URL.createObjectURL(file);\n      const finalize = () => {\n        api.unblock();\n        URL.revokeObjectURL(blobUri);\n      };\n      const updateSrcAndSwitchTab = url => {\n        api.setData({\n          src: {\n            value: url,\n            meta: {}\n          }\n        });\n        api.showTab('general');\n        changeSrc(helpers, info, state, api);\n      };\n      blobToDataUri(file).then(dataUrl => {\n        const blobInfo = helpers.createBlobCache(file, blobUri, dataUrl);\n        if (info.automaticUploads) {\n          helpers.uploadImage(blobInfo).then(result => {\n            updateSrcAndSwitchTab(result.url);\n            finalize();\n          }).catch(err => {\n            finalize();\n            helpers.alertErr(err);\n          });\n        } else {\n          helpers.addToBlobCache(blobInfo);\n          updateSrcAndSwitchTab(blobInfo.blobUri());\n          api.unblock();\n        }\n      });\n    });\n  };\n  const changeHandler = (helpers, info, state) => (api, evt) => {\n    if (evt.name === 'src') {\n      changeSrc(helpers, info, state, api);\n    } else if (evt.name === 'images') {\n      changeImages(helpers, info, state, api);\n    } else if (evt.name === 'alt') {\n      state.prevAlt = api.getData().alt;\n    } else if (evt.name === 'fileinput') {\n      changeFileInput(helpers, info, state, api);\n    } else if (evt.name === 'isDecorative') {\n      api.setEnabled('alt', !api.getData().isDecorative);\n    }\n  };\n  const closeHandler = state => () => {\n    state.open = false;\n  };\n  const makeDialogBody = info => {\n    if (info.hasAdvTab || info.hasUploadUrl || info.hasUploadHandler) {\n      const tabPanel = {\n        type: 'tabpanel',\n        tabs: flatten([[MainTab.makeTab(info)], info.hasAdvTab ? [AdvTab.makeTab(info)] : [], info.hasUploadTab && (info.hasUploadUrl || info.hasUploadHandler) ? [UploadTab.makeTab(info)] : []])\n      };\n      return tabPanel;\n    } else {\n      const panel = {\n        type: 'panel',\n        items: MainTab.makeItems(info)\n      };\n      return panel;\n    }\n  };\n  const submitHandler = (editor, info, helpers) => api => {\n    const data = deepMerge(fromImageData(info.image), api.getData());\n    const finalData = {\n      ...data,\n      style: getStyleValue(helpers.normalizeCss, toImageData(data, false))\n    };\n    editor.execCommand('mceUpdateImage', false, toImageData(finalData, info.hasAccessibilityOptions));\n    editor.editorUpload.uploadImagesAuto();\n    api.close();\n  };\n  const imageSize = editor => url => {\n    if (!isSafeImageUrl(editor, url)) {\n      return Promise.resolve({\n        width: '',\n        height: ''\n      });\n    } else {\n      return getImageSize(editor.documentBaseURI.toAbsolute(url)).then(dimensions => ({\n        width: String(dimensions.width),\n        height: String(dimensions.height)\n      }));\n    }\n  };\n  const createBlobCache = editor => (file, blobUri, dataUrl) => {\n    var _a;\n    return editor.editorUpload.blobCache.create({\n      blob: file,\n      blobUri,\n      name: (_a = file.name) === null || _a === void 0 ? void 0 : _a.replace(/\\.[^\\.]+$/, ''),\n      filename: file.name,\n      base64: dataUrl.split(',')[1]\n    });\n  };\n  const addToBlobCache = editor => blobInfo => {\n    editor.editorUpload.blobCache.add(blobInfo);\n  };\n  const alertErr = editor => message => {\n    editor.windowManager.alert(message);\n  };\n  const normalizeCss = editor => cssText => normalizeCss$1(editor, cssText);\n  const parseStyle = editor => cssText => editor.dom.parseStyle(cssText);\n  const serializeStyle = editor => (stylesArg, name) => editor.dom.serializeStyle(stylesArg, name);\n  const uploadImage = editor => blobInfo => global$1(editor).upload([blobInfo], false).then(results => {\n    var _a;\n    if (results.length === 0) {\n      return Promise.reject('Failed to upload image');\n    } else if (results[0].status === false) {\n      return Promise.reject((_a = results[0].error) === null || _a === void 0 ? void 0 : _a.message);\n    } else {\n      return results[0];\n    }\n  });\n  const Dialog = editor => {\n    const helpers = {\n      imageSize: imageSize(editor),\n      addToBlobCache: addToBlobCache(editor),\n      createBlobCache: createBlobCache(editor),\n      alertErr: alertErr(editor),\n      normalizeCss: normalizeCss(editor),\n      parseStyle: parseStyle(editor),\n      serializeStyle: serializeStyle(editor),\n      uploadImage: uploadImage(editor)\n    };\n    const open = () => {\n      collect(editor).then(info => {\n        const state = createState(info);\n        return {\n          title: 'Insert/Edit Image',\n          size: 'normal',\n          body: makeDialogBody(info),\n          buttons: [{\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          }, {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }],\n          initialData: fromImageData(info.image),\n          onSubmit: submitHandler(editor, info, helpers),\n          onChange: changeHandler(helpers, info, state),\n          onClose: closeHandler(state)\n        };\n      }).then(editor.windowManager.open);\n    };\n    return {\n      open\n    };\n  };\n  const register$1 = editor => {\n    editor.addCommand('mceImage', Dialog(editor).open);\n    editor.addCommand('mceUpdateImage', (_ui, data) => {\n      editor.undoManager.transact(() => insertOrUpdateImage(editor, data));\n    });\n  };\n  const hasImageClass = node => {\n    const className = node.attr('class');\n    return isNonNullable(className) && /\\bimage\\b/.test(className);\n  };\n  const toggleContentEditableState = state => nodes => {\n    let i = nodes.length;\n    const toggleContentEditable = node => {\n      node.attr('contenteditable', state ? 'true' : null);\n    };\n    while (i--) {\n      const node = nodes[i];\n      if (hasImageClass(node)) {\n        node.attr('contenteditable', state ? 'false' : null);\n        global.each(node.getAll('figcaption'), toggleContentEditable);\n      }\n    }\n  };\n  const setup = editor => {\n    editor.on('PreInit', () => {\n      editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n      editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n    });\n  };\n  const register = editor => {\n    editor.ui.registry.addToggleButton('image', {\n      icon: 'image',\n      tooltip: 'Insert/edit image',\n      onAction: Dialog(editor).open,\n      onSetup: buttonApi => {\n        buttonApi.setActive(isNonNullable(getSelectedImage(editor)));\n        return editor.selection.selectorChangedWithUnbind('img:not([data-mce-object]):not([data-mce-placeholder]),figure.image', buttonApi.setActive).unbind;\n      }\n    });\n    editor.ui.registry.addMenuItem('image', {\n      icon: 'image',\n      text: 'Image...',\n      onAction: Dialog(editor).open\n    });\n    editor.ui.registry.addContextMenu('image', {\n      update: element => isFigure(element) || isImage(element) && !isPlaceholderImage(element) ? ['image'] : []\n    });\n  };\n  var Plugin = () => {\n    global$4.add('image', editor => {\n      register$2(editor);\n      setup(editor);\n      register(editor);\n      register$1(editor);\n    });\n  };\n  Plugin();\n})();","map":{"version":3,"names":["global$4","tinymce","util","Tools","resolve","getPrototypeOf","Object","hasProto","v","constructor","predicate","_a","prototype","name","typeOf","x","t","Array","isArray","String","o","proto","isPrototypeOf","isType","type","value","isSimpleType","eq","a","is","isObject","isString","isPlainObject","isNull","isBoolean","isNullable","undefined","isNonNullable","isFunction","isNumber","isArrayOf","pred","i","len","length","noop","Optional","tag","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","getOrNull","getOrUndefined","each","worker","toArray","toString","keys","hasOwnProperty","obj","f","props","k","objAcc","r","internalFilter","onTrue","onFalse","has","key","call","hasNonNullableKey","nativePush","push","flatten","xs","apply","get","head","findMap","arr","window","Function","rawSet","dom","setAttribute","console","error","set","element","remove","removeAttribute","fromHtml","html","scope","doc","document","div","createElement","innerHTML","hasChildNodes","childNodes","fromDom","fromTag","node","fromText","text","createTextNode","fromPoint","docElm","y","elementFromPoint","SugarElement","global$3","global$2","isNotEmpty","s","option","editor","options","register$2","registerOption","register","processor","default","valid","hasDimensions","hasAdvTab","hasUploadTab","getPrependUrl","getClassList","hasDescription","hasImageTitle","hasImageCaption","getImageList","showAccessibilityOptions","isAutomaticUploadsEnabled","hasUploadUrl","hasUploadHandler","parseIntAndGetMax","val1","val2","Math","max","parseInt","getImageSize","url","Promise","callback","img","done","dimensions","onload","onerror","parentNode","removeChild","width","clientWidth","height","clientHeight","reject","style","visibility","position","bottom","left","body","appendChild","src","removePixelSuffix","replace","addPixelSuffix","test","mergeMargins","css","margin","splitMargin","split","createImageList","imageList","fetch","then","res","ok","json","waitLoadImage","data","imgElm","selectImage","selection","select","nodeChanged","setAttribs","blobToDataUri","blob","reader","FileReader","result","readAsDataURL","isPlaceholderImage","nodeName","hasAttribute","isSafeImageUrl","getOption","isDomSafe","allow_html_data_urls","allow_script_urls","allow_svg_data_urls","DOM","getHspace","image","marginLeft","marginRight","getVspace","marginTop","marginBottom","getBorder","borderWidth","getAttrib","getAttribute","hasCaption","updateAttrib","wrapInFigure","figureElm","create","class","insertAfter","contentEditable","removeFigure","toggleCaption","normalizeStyle","normalizeCss","attrValue","setSize","styles","getSize","setHspace","pxValue","setVspace","setBorder","setBorderStyle","borderStyle","getBorderStyle","isFigure","elm","isImage","getIsDecorative","getAlt","defaultData","alt","title","caption","hspace","vspace","border","isDecorative","getStyleValue","write","setAlt","figure","read","updateProp","oldData","newData","setAttrib","sugarImage","updateAlt","normalized","_name","_value","normalizeCss$1","cssText","parse","mergedCss","compressed","serialize","getSelectedImage","getNode","getParent","splitTextBlock","textBlockElements","schema","getTextBlockElements","_","parentElm","isValidChild","textBlock","getBody","readImageDataFromSelection","insertImageAtCaret","focus","setContent","outerHTML","insertedElm","syncSrcAttr","deleteImage","isEmpty","setCursorLocation","writeImageDataToSelection","sanitizeImageData","insertOrUpdateImage","partialData","selectedImageData","sanitizedData","deep","old","nu","bothObjects","deepMerge","baseMerge","merger","objects","ret","j","curObject","global$1","global","getValue","item","getText","sanitizeList","list","extractValue","out","menu","items","sanitizer","extractor","sanitize","isGroup","findEntryDelegate","findEntry","optList","ListUtils","makeTab$2","_info","columns","label","inputMode","AdvTab","makeTab","collect","urlListSanitizer","convertURL","futureImageList","completer","classList","hasAdvTab$1","hasUploadTab$1","hasUploadUrl$1","hasUploadHandler$1","hasDescription$1","hasImageTitle$1","hasDimensions$1","hasImageCaption$1","hasAccessibilityOptions","automaticUploads","prependURL","preUrl","makeItems","info","imageUrl","filetype","imageDescription","enabled","imageTitle","imageDimensions","getDialogContainerType","useColumns","makeTab$1","MainTab","UploadTab","createState","prevImage","prevAlt","open","fromImageData","meta","images","classes","borderstyle","fileinput","toImageData","removeEmptyAlt","addPrependUrl2","srcURL","prependUrl","substring","addPrependUrl","api","getData","setData","formFillFromMeta2","entry","formFillFromMeta","calculateImageSize","helpers","state","imageSize","size","catch","e","updateImagesDropdown","changeSrc","changeImages","changeFileInput","block","unblock","file","blobUri","URL","createObjectURL","finalize","revokeObjectURL","updateSrcAndSwitchTab","showTab","dataUrl","blobInfo","createBlobCache","uploadImage","err","alertErr","addToBlobCache","changeHandler","evt","setEnabled","closeHandler","makeDialogBody","tabPanel","tabs","panel","submitHandler","finalData","execCommand","editorUpload","uploadImagesAuto","close","documentBaseURI","toAbsolute","blobCache","filename","base64","add","windowManager","alert","parseStyle","serializeStyle","stylesArg","upload","results","status","Dialog","buttons","primary","initialData","onSubmit","onChange","onClose","register$1","addCommand","_ui","undoManager","transact","hasImageClass","className","attr","toggleContentEditableState","nodes","toggleContentEditable","getAll","setup","on","parser","addNodeFilter","serializer","ui","registry","addToggleButton","icon","tooltip","onAction","onSetup","buttonApi","setActive","selectorChangedWithUnbind","unbind","addMenuItem","addContextMenu","update","Plugin"],"sources":["/home/hyq/GoHome/src/ginblog/web/admin/node_modules/tinymce/plugins/image/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.2.0 (2022-09-08)\n */\n\n(function () {\n    'use strict';\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const getPrototypeOf = Object.getPrototypeOf;\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const is = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf(o) === proto);\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isPlainObject = value => is(value, Object);\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const noop = () => {\n    };\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const nativePush = Array.prototype.push;\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const get = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get(xs, 0);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const remove = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    const fromDom = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom,\n      fromPoint\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const isNotEmpty = s => s.length > 0;\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('image_dimensions', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('image_advtab', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('image_uploadtab', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('image_prepend_url', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('image_class_list', { processor: 'object[]' });\n      registerOption('image_description', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('image_title', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('image_caption', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('image_list', {\n        processor: value => {\n          const valid = value === false || isString(value) || isArrayOf(value, isObject) || isFunction(value);\n          return valid ? {\n            value,\n            valid\n          } : {\n            valid: false,\n            message: 'Must be false, a string, an array or a function.'\n          };\n        },\n        default: false\n      });\n    };\n    const hasDimensions = option('image_dimensions');\n    const hasAdvTab = option('image_advtab');\n    const hasUploadTab = option('image_uploadtab');\n    const getPrependUrl = option('image_prepend_url');\n    const getClassList = option('image_class_list');\n    const hasDescription = option('image_description');\n    const hasImageTitle = option('image_title');\n    const hasImageCaption = option('image_caption');\n    const getImageList = option('image_list');\n    const showAccessibilityOptions = option('a11y_advanced_options');\n    const isAutomaticUploadsEnabled = option('automatic_uploads');\n    const hasUploadUrl = editor => isNotEmpty(editor.options.get('images_upload_url'));\n    const hasUploadHandler = editor => isNonNullable(editor.options.get('images_upload_handler'));\n\n    const parseIntAndGetMax = (val1, val2) => Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    const getImageSize = url => new Promise(callback => {\n      const img = document.createElement('img');\n      const done = dimensions => {\n        img.onload = img.onerror = null;\n        if (img.parentNode) {\n          img.parentNode.removeChild(img);\n        }\n        callback(dimensions);\n      };\n      img.onload = () => {\n        const width = parseIntAndGetMax(img.width, img.clientWidth);\n        const height = parseIntAndGetMax(img.height, img.clientHeight);\n        const dimensions = {\n          width,\n          height\n        };\n        done(Promise.resolve(dimensions));\n      };\n      img.onerror = () => {\n        done(Promise.reject(`Failed to get image dimensions for: ${ url }`));\n      };\n      const style = img.style;\n      style.visibility = 'hidden';\n      style.position = 'fixed';\n      style.bottom = style.left = '0px';\n      style.width = style.height = 'auto';\n      document.body.appendChild(img);\n      img.src = url;\n    });\n    const removePixelSuffix = value => {\n      if (value) {\n        value = value.replace(/px$/, '');\n      }\n      return value;\n    };\n    const addPixelSuffix = value => {\n      if (value.length > 0 && /^[0-9]+$/.test(value)) {\n        value += 'px';\n      }\n      return value;\n    };\n    const mergeMargins = css => {\n      if (css.margin) {\n        const splitMargin = String(css.margin).split(' ');\n        switch (splitMargin.length) {\n        case 1:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[0];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[0];\n          break;\n        case 2:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 3:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 4:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[3];\n        }\n        delete css.margin;\n      }\n      return css;\n    };\n    const createImageList = (editor, callback) => {\n      const imageList = getImageList(editor);\n      if (isString(imageList)) {\n        fetch(imageList).then(res => {\n          if (res.ok) {\n            res.json().then(callback);\n          }\n        });\n      } else if (isFunction(imageList)) {\n        imageList(callback);\n      } else {\n        callback(imageList);\n      }\n    };\n    const waitLoadImage = (editor, data, imgElm) => {\n      const selectImage = () => {\n        imgElm.onload = imgElm.onerror = null;\n        if (editor.selection) {\n          editor.selection.select(imgElm);\n          editor.nodeChanged();\n        }\n      };\n      imgElm.onload = () => {\n        if (!data.width && !data.height && hasDimensions(editor)) {\n          editor.dom.setAttribs(imgElm, {\n            width: String(imgElm.clientWidth),\n            height: String(imgElm.clientHeight)\n          });\n        }\n        selectImage();\n      };\n      imgElm.onerror = selectImage;\n    };\n    const blobToDataUri = blob => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.onerror = () => {\n        var _a;\n        reject((_a = reader.error) === null || _a === void 0 ? void 0 : _a.message);\n      };\n      reader.readAsDataURL(blob);\n    });\n    const isPlaceholderImage = imgElm => imgElm.nodeName === 'IMG' && (imgElm.hasAttribute('data-mce-object') || imgElm.hasAttribute('data-mce-placeholder'));\n    const isSafeImageUrl = (editor, src) => {\n      const getOption = editor.options.get;\n      return global$2.isDomSafe(src, 'img', {\n        allow_html_data_urls: getOption('allow_html_data_urls'),\n        allow_script_urls: getOption('allow_script_urls'),\n        allow_svg_data_urls: getOption('allow_svg_data_urls')\n      });\n    };\n\n    const DOM = global$3.DOM;\n    const getHspace = image => {\n      if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n        return removePixelSuffix(image.style.marginLeft);\n      } else {\n        return '';\n      }\n    };\n    const getVspace = image => {\n      if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n        return removePixelSuffix(image.style.marginTop);\n      } else {\n        return '';\n      }\n    };\n    const getBorder = image => {\n      if (image.style.borderWidth) {\n        return removePixelSuffix(image.style.borderWidth);\n      } else {\n        return '';\n      }\n    };\n    const getAttrib = (image, name) => {\n      var _a;\n      if (image.hasAttribute(name)) {\n        return (_a = image.getAttribute(name)) !== null && _a !== void 0 ? _a : '';\n      } else {\n        return '';\n      }\n    };\n    const hasCaption = image => image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    const updateAttrib = (image, name, value) => {\n      if (value === '' || value === null) {\n        image.removeAttribute(name);\n      } else {\n        image.setAttribute(name, value);\n      }\n    };\n    const wrapInFigure = image => {\n      const figureElm = DOM.create('figure', { class: 'image' });\n      DOM.insertAfter(figureElm, image);\n      figureElm.appendChild(image);\n      figureElm.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n      figureElm.contentEditable = 'false';\n    };\n    const removeFigure = image => {\n      const figureElm = image.parentNode;\n      if (isNonNullable(figureElm)) {\n        DOM.insertAfter(image, figureElm);\n        DOM.remove(figureElm);\n      }\n    };\n    const toggleCaption = image => {\n      if (hasCaption(image)) {\n        removeFigure(image);\n      } else {\n        wrapInFigure(image);\n      }\n    };\n    const normalizeStyle = (image, normalizeCss) => {\n      const attrValue = image.getAttribute('style');\n      const value = normalizeCss(attrValue !== null ? attrValue : '');\n      if (value.length > 0) {\n        image.setAttribute('style', value);\n        image.setAttribute('data-mce-style', value);\n      } else {\n        image.removeAttribute('style');\n      }\n    };\n    const setSize = (name, normalizeCss) => (image, name, value) => {\n      const styles = image.style;\n      if (styles[name]) {\n        styles[name] = addPixelSuffix(value);\n        normalizeStyle(image, normalizeCss);\n      } else {\n        updateAttrib(image, name, value);\n      }\n    };\n    const getSize = (image, name) => {\n      if (image.style[name]) {\n        return removePixelSuffix(image.style[name]);\n      } else {\n        return getAttrib(image, name);\n      }\n    };\n    const setHspace = (image, value) => {\n      const pxValue = addPixelSuffix(value);\n      image.style.marginLeft = pxValue;\n      image.style.marginRight = pxValue;\n    };\n    const setVspace = (image, value) => {\n      const pxValue = addPixelSuffix(value);\n      image.style.marginTop = pxValue;\n      image.style.marginBottom = pxValue;\n    };\n    const setBorder = (image, value) => {\n      const pxValue = addPixelSuffix(value);\n      image.style.borderWidth = pxValue;\n    };\n    const setBorderStyle = (image, value) => {\n      image.style.borderStyle = value;\n    };\n    const getBorderStyle = image => {\n      var _a;\n      return (_a = image.style.borderStyle) !== null && _a !== void 0 ? _a : '';\n    };\n    const isFigure = elm => isNonNullable(elm) && elm.nodeName === 'FIGURE';\n    const isImage = elm => elm.nodeName === 'IMG';\n    const getIsDecorative = image => DOM.getAttrib(image, 'alt').length === 0 && DOM.getAttrib(image, 'role') === 'presentation';\n    const getAlt = image => {\n      if (getIsDecorative(image)) {\n        return '';\n      } else {\n        return getAttrib(image, 'alt');\n      }\n    };\n    const defaultData = () => ({\n      src: '',\n      alt: '',\n      title: '',\n      width: '',\n      height: '',\n      class: '',\n      style: '',\n      caption: false,\n      hspace: '',\n      vspace: '',\n      border: '',\n      borderStyle: '',\n      isDecorative: false\n    });\n    const getStyleValue = (normalizeCss, data) => {\n      var _a;\n      const image = document.createElement('img');\n      updateAttrib(image, 'style', data.style);\n      if (getHspace(image) || data.hspace !== '') {\n        setHspace(image, data.hspace);\n      }\n      if (getVspace(image) || data.vspace !== '') {\n        setVspace(image, data.vspace);\n      }\n      if (getBorder(image) || data.border !== '') {\n        setBorder(image, data.border);\n      }\n      if (getBorderStyle(image) || data.borderStyle !== '') {\n        setBorderStyle(image, data.borderStyle);\n      }\n      return normalizeCss((_a = image.getAttribute('style')) !== null && _a !== void 0 ? _a : '');\n    };\n    const create = (normalizeCss, data) => {\n      const image = document.createElement('img');\n      write(normalizeCss, {\n        ...data,\n        caption: false\n      }, image);\n      setAlt(image, data.alt, data.isDecorative);\n      if (data.caption) {\n        const figure = DOM.create('figure', { class: 'image' });\n        figure.appendChild(image);\n        figure.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n        figure.contentEditable = 'false';\n        return figure;\n      } else {\n        return image;\n      }\n    };\n    const read = (normalizeCss, image) => ({\n      src: getAttrib(image, 'src'),\n      alt: getAlt(image),\n      title: getAttrib(image, 'title'),\n      width: getSize(image, 'width'),\n      height: getSize(image, 'height'),\n      class: getAttrib(image, 'class'),\n      style: normalizeCss(getAttrib(image, 'style')),\n      caption: hasCaption(image),\n      hspace: getHspace(image),\n      vspace: getVspace(image),\n      border: getBorder(image),\n      borderStyle: getBorderStyle(image),\n      isDecorative: getIsDecorative(image)\n    });\n    const updateProp = (image, oldData, newData, name, set) => {\n      if (newData[name] !== oldData[name]) {\n        set(image, name, String(newData[name]));\n      }\n    };\n    const setAlt = (image, alt, isDecorative) => {\n      if (isDecorative) {\n        DOM.setAttrib(image, 'role', 'presentation');\n        const sugarImage = SugarElement.fromDom(image);\n        set(sugarImage, 'alt', '');\n      } else {\n        if (isNull(alt)) {\n          const sugarImage = SugarElement.fromDom(image);\n          remove(sugarImage, 'alt');\n        } else {\n          const sugarImage = SugarElement.fromDom(image);\n          set(sugarImage, 'alt', alt);\n        }\n        if (DOM.getAttrib(image, 'role') === 'presentation') {\n          DOM.setAttrib(image, 'role', '');\n        }\n      }\n    };\n    const updateAlt = (image, oldData, newData) => {\n      if (newData.alt !== oldData.alt || newData.isDecorative !== oldData.isDecorative) {\n        setAlt(image, newData.alt, newData.isDecorative);\n      }\n    };\n    const normalized = (set, normalizeCss) => (image, name, value) => {\n      set(image, value);\n      normalizeStyle(image, normalizeCss);\n    };\n    const write = (normalizeCss, newData, image) => {\n      const oldData = read(normalizeCss, image);\n      updateProp(image, oldData, newData, 'caption', (image, _name, _value) => toggleCaption(image));\n      updateProp(image, oldData, newData, 'src', updateAttrib);\n      updateProp(image, oldData, newData, 'title', updateAttrib);\n      updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n      updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n      updateProp(image, oldData, newData, 'class', updateAttrib);\n      updateProp(image, oldData, newData, 'style', normalized((image, value) => updateAttrib(image, 'style', value), normalizeCss));\n      updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n      updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n      updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n      updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n      updateAlt(image, oldData, newData);\n    };\n\n    const normalizeCss$1 = (editor, cssText) => {\n      const css = editor.dom.styles.parse(cssText);\n      const mergedCss = mergeMargins(css);\n      const compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n      return editor.dom.styles.serialize(compressed);\n    };\n    const getSelectedImage = editor => {\n      const imgElm = editor.selection.getNode();\n      const figureElm = editor.dom.getParent(imgElm, 'figure.image');\n      if (figureElm) {\n        return editor.dom.select('img', figureElm)[0];\n      }\n      if (imgElm && (imgElm.nodeName !== 'IMG' || isPlaceholderImage(imgElm))) {\n        return null;\n      }\n      return imgElm;\n    };\n    const splitTextBlock = (editor, figure) => {\n      var _a;\n      const dom = editor.dom;\n      const textBlockElements = filter(editor.schema.getTextBlockElements(), (_, parentElm) => !editor.schema.isValidChild(parentElm, 'figure'));\n      const textBlock = dom.getParent(figure.parentNode, node => hasNonNullableKey(textBlockElements, node.nodeName), editor.getBody());\n      if (textBlock) {\n        return (_a = dom.split(textBlock, figure)) !== null && _a !== void 0 ? _a : figure;\n      } else {\n        return figure;\n      }\n    };\n    const readImageDataFromSelection = editor => {\n      const image = getSelectedImage(editor);\n      return image ? read(css => normalizeCss$1(editor, css), image) : defaultData();\n    };\n    const insertImageAtCaret = (editor, data) => {\n      const elm = create(css => normalizeCss$1(editor, css), data);\n      editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n      editor.focus();\n      editor.selection.setContent(elm.outerHTML);\n      const insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n      editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n      if (isFigure(insertedElm)) {\n        const figure = splitTextBlock(editor, insertedElm);\n        editor.selection.select(figure);\n      } else {\n        editor.selection.select(insertedElm);\n      }\n    };\n    const syncSrcAttr = (editor, image) => {\n      editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    const deleteImage = (editor, image) => {\n      if (image) {\n        const elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n        editor.dom.remove(elm);\n        editor.focus();\n        editor.nodeChanged();\n        if (editor.dom.isEmpty(editor.getBody())) {\n          editor.setContent('');\n          editor.selection.setCursorLocation();\n        }\n      }\n    };\n    const writeImageDataToSelection = (editor, data) => {\n      const image = getSelectedImage(editor);\n      if (image) {\n        write(css => normalizeCss$1(editor, css), data, image);\n        syncSrcAttr(editor, image);\n        if (isFigure(image.parentNode)) {\n          const figure = image.parentNode;\n          splitTextBlock(editor, figure);\n          editor.selection.select(image.parentNode);\n        } else {\n          editor.selection.select(image);\n          waitLoadImage(editor, data, image);\n        }\n      }\n    };\n    const sanitizeImageData = (editor, data) => {\n      const src = data.src;\n      return {\n        ...data,\n        src: isSafeImageUrl(editor, src) ? src : ''\n      };\n    };\n    const insertOrUpdateImage = (editor, partialData) => {\n      const image = getSelectedImage(editor);\n      if (image) {\n        const selectedImageData = read(css => normalizeCss$1(editor, css), image);\n        const data = {\n          ...selectedImageData,\n          ...partialData\n        };\n        const sanitizedData = sanitizeImageData(editor, data);\n        if (data.src) {\n          writeImageDataToSelection(editor, sanitizedData);\n        } else {\n          deleteImage(editor, image);\n        }\n      } else if (partialData.src) {\n        insertImageAtCaret(editor, {\n          ...defaultData(),\n          ...partialData\n        });\n      }\n    };\n\n    const deep = (old, nu) => {\n      const bothObjects = isPlainObject(old) && isPlainObject(nu);\n      return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    const baseMerge = merger => {\n      return (...objects) => {\n        if (objects.length === 0) {\n          throw new Error(`Can't merge zero objects`);\n        }\n        const ret = {};\n        for (let j = 0; j < objects.length; j++) {\n          const curObject = objects[j];\n          for (const key in curObject) {\n            if (has(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    const deepMerge = baseMerge(deep);\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.ImageUploader');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const getValue = item => isString(item.value) ? item.value : '';\n    const getText = item => {\n      if (isString(item.text)) {\n        return item.text;\n      } else if (isString(item.title)) {\n        return item.title;\n      } else {\n        return '';\n      }\n    };\n    const sanitizeList = (list, extractValue) => {\n      const out = [];\n      global.each(list, item => {\n        const text = getText(item);\n        if (item.menu !== undefined) {\n          const items = sanitizeList(item.menu, extractValue);\n          out.push({\n            text,\n            items\n          });\n        } else {\n          const value = extractValue(item);\n          out.push({\n            text,\n            value\n          });\n        }\n      });\n      return out;\n    };\n    const sanitizer = (extractor = getValue) => list => {\n      if (list) {\n        return Optional.from(list).map(list => sanitizeList(list, extractor));\n      } else {\n        return Optional.none();\n      }\n    };\n    const sanitize = list => sanitizer(getValue)(list);\n    const isGroup = item => has(item, 'items');\n    const findEntryDelegate = (list, value) => findMap(list, item => {\n      if (isGroup(item)) {\n        return findEntryDelegate(item.items, value);\n      } else if (item.value === value) {\n        return Optional.some(item);\n      } else {\n        return Optional.none();\n      }\n    });\n    const findEntry = (optList, value) => optList.bind(list => findEntryDelegate(list, value));\n    const ListUtils = {\n      sanitizer,\n      sanitize,\n      findEntry\n    };\n\n    const makeTab$2 = _info => ({\n      title: 'Advanced',\n      name: 'advanced',\n      items: [{\n          type: 'grid',\n          columns: 2,\n          items: [\n            {\n              type: 'input',\n              label: 'Vertical space',\n              name: 'vspace',\n              inputMode: 'numeric'\n            },\n            {\n              type: 'input',\n              label: 'Horizontal space',\n              name: 'hspace',\n              inputMode: 'numeric'\n            },\n            {\n              type: 'input',\n              label: 'Border width',\n              name: 'border',\n              inputMode: 'numeric'\n            },\n            {\n              type: 'listbox',\n              name: 'borderstyle',\n              label: 'Border style',\n              items: [\n                {\n                  text: 'Select...',\n                  value: ''\n                },\n                {\n                  text: 'Solid',\n                  value: 'solid'\n                },\n                {\n                  text: 'Dotted',\n                  value: 'dotted'\n                },\n                {\n                  text: 'Dashed',\n                  value: 'dashed'\n                },\n                {\n                  text: 'Double',\n                  value: 'double'\n                },\n                {\n                  text: 'Groove',\n                  value: 'groove'\n                },\n                {\n                  text: 'Ridge',\n                  value: 'ridge'\n                },\n                {\n                  text: 'Inset',\n                  value: 'inset'\n                },\n                {\n                  text: 'Outset',\n                  value: 'outset'\n                },\n                {\n                  text: 'None',\n                  value: 'none'\n                },\n                {\n                  text: 'Hidden',\n                  value: 'hidden'\n                }\n              ]\n            }\n          ]\n        }]\n    });\n    const AdvTab = { makeTab: makeTab$2 };\n\n    const collect = editor => {\n      const urlListSanitizer = ListUtils.sanitizer(item => editor.convertURL(item.value || item.url || '', 'src'));\n      const futureImageList = new Promise(completer => {\n        createImageList(editor, imageList => {\n          completer(urlListSanitizer(imageList).map(items => flatten([\n            [{\n                text: 'None',\n                value: ''\n              }],\n            items\n          ])));\n        });\n      });\n      const classList = ListUtils.sanitize(getClassList(editor));\n      const hasAdvTab$1 = hasAdvTab(editor);\n      const hasUploadTab$1 = hasUploadTab(editor);\n      const hasUploadUrl$1 = hasUploadUrl(editor);\n      const hasUploadHandler$1 = hasUploadHandler(editor);\n      const image = readImageDataFromSelection(editor);\n      const hasDescription$1 = hasDescription(editor);\n      const hasImageTitle$1 = hasImageTitle(editor);\n      const hasDimensions$1 = hasDimensions(editor);\n      const hasImageCaption$1 = hasImageCaption(editor);\n      const hasAccessibilityOptions = showAccessibilityOptions(editor);\n      const automaticUploads = isAutomaticUploadsEnabled(editor);\n      const prependURL = Optional.some(getPrependUrl(editor)).filter(preUrl => isString(preUrl) && preUrl.length > 0);\n      return futureImageList.then(imageList => ({\n        image,\n        imageList,\n        classList,\n        hasAdvTab: hasAdvTab$1,\n        hasUploadTab: hasUploadTab$1,\n        hasUploadUrl: hasUploadUrl$1,\n        hasUploadHandler: hasUploadHandler$1,\n        hasDescription: hasDescription$1,\n        hasImageTitle: hasImageTitle$1,\n        hasDimensions: hasDimensions$1,\n        hasImageCaption: hasImageCaption$1,\n        prependURL,\n        hasAccessibilityOptions,\n        automaticUploads\n      }));\n    };\n\n    const makeItems = info => {\n      const imageUrl = {\n        name: 'src',\n        type: 'urlinput',\n        filetype: 'image',\n        label: 'Source'\n      };\n      const imageList = info.imageList.map(items => ({\n        name: 'images',\n        type: 'listbox',\n        label: 'Image list',\n        items\n      }));\n      const imageDescription = {\n        name: 'alt',\n        type: 'input',\n        label: 'Alternative description',\n        enabled: !(info.hasAccessibilityOptions && info.image.isDecorative)\n      };\n      const imageTitle = {\n        name: 'title',\n        type: 'input',\n        label: 'Image title'\n      };\n      const imageDimensions = {\n        name: 'dimensions',\n        type: 'sizeinput'\n      };\n      const isDecorative = {\n        type: 'label',\n        label: 'Accessibility',\n        items: [{\n            name: 'isDecorative',\n            type: 'checkbox',\n            label: 'Image is decorative'\n          }]\n      };\n      const classList = info.classList.map(items => ({\n        name: 'classes',\n        type: 'listbox',\n        label: 'Class',\n        items\n      }));\n      const caption = {\n        type: 'label',\n        label: 'Caption',\n        items: [{\n            type: 'checkbox',\n            name: 'caption',\n            label: 'Show caption'\n          }]\n      };\n      const getDialogContainerType = useColumns => useColumns ? {\n        type: 'grid',\n        columns: 2\n      } : { type: 'panel' };\n      return flatten([\n        [imageUrl],\n        imageList.toArray(),\n        info.hasAccessibilityOptions && info.hasDescription ? [isDecorative] : [],\n        info.hasDescription ? [imageDescription] : [],\n        info.hasImageTitle ? [imageTitle] : [],\n        info.hasDimensions ? [imageDimensions] : [],\n        [{\n            ...getDialogContainerType(info.classList.isSome() && info.hasImageCaption),\n            items: flatten([\n              classList.toArray(),\n              info.hasImageCaption ? [caption] : []\n            ])\n          }]\n      ]);\n    };\n    const makeTab$1 = info => ({\n      title: 'General',\n      name: 'general',\n      items: makeItems(info)\n    });\n    const MainTab = {\n      makeTab: makeTab$1,\n      makeItems\n    };\n\n    const makeTab = _info => {\n      const items = [{\n          type: 'dropzone',\n          name: 'fileinput'\n        }];\n      return {\n        title: 'Upload',\n        name: 'upload',\n        items\n      };\n    };\n    const UploadTab = { makeTab };\n\n    const createState = info => ({\n      prevImage: ListUtils.findEntry(info.imageList, info.image.src),\n      prevAlt: info.image.alt,\n      open: true\n    });\n    const fromImageData = image => ({\n      src: {\n        value: image.src,\n        meta: {}\n      },\n      images: image.src,\n      alt: image.alt,\n      title: image.title,\n      dimensions: {\n        width: image.width,\n        height: image.height\n      },\n      classes: image.class,\n      caption: image.caption,\n      style: image.style,\n      vspace: image.vspace,\n      border: image.border,\n      hspace: image.hspace,\n      borderstyle: image.borderStyle,\n      fileinput: [],\n      isDecorative: image.isDecorative\n    });\n    const toImageData = (data, removeEmptyAlt) => ({\n      src: data.src.value,\n      alt: (data.alt === null || data.alt.length === 0) && removeEmptyAlt ? null : data.alt,\n      title: data.title,\n      width: data.dimensions.width,\n      height: data.dimensions.height,\n      class: data.classes,\n      style: data.style,\n      caption: data.caption,\n      hspace: data.hspace,\n      vspace: data.vspace,\n      border: data.border,\n      borderStyle: data.borderstyle,\n      isDecorative: data.isDecorative\n    });\n    const addPrependUrl2 = (info, srcURL) => {\n      if (!/^(?:[a-zA-Z]+:)?\\/\\//.test(srcURL)) {\n        return info.prependURL.bind(prependUrl => {\n          if (srcURL.substring(0, prependUrl.length) !== prependUrl) {\n            return Optional.some(prependUrl + srcURL);\n          }\n          return Optional.none();\n        });\n      }\n      return Optional.none();\n    };\n    const addPrependUrl = (info, api) => {\n      const data = api.getData();\n      addPrependUrl2(info, data.src.value).each(srcURL => {\n        api.setData({\n          src: {\n            value: srcURL,\n            meta: data.src.meta\n          }\n        });\n      });\n    };\n    const formFillFromMeta2 = (info, data, meta) => {\n      if (info.hasDescription && isString(meta.alt)) {\n        data.alt = meta.alt;\n      }\n      if (info.hasAccessibilityOptions) {\n        data.isDecorative = meta.isDecorative || data.isDecorative || false;\n      }\n      if (info.hasImageTitle && isString(meta.title)) {\n        data.title = meta.title;\n      }\n      if (info.hasDimensions) {\n        if (isString(meta.width)) {\n          data.dimensions.width = meta.width;\n        }\n        if (isString(meta.height)) {\n          data.dimensions.height = meta.height;\n        }\n      }\n      if (isString(meta.class)) {\n        ListUtils.findEntry(info.classList, meta.class).each(entry => {\n          data.classes = entry.value;\n        });\n      }\n      if (info.hasImageCaption) {\n        if (isBoolean(meta.caption)) {\n          data.caption = meta.caption;\n        }\n      }\n      if (info.hasAdvTab) {\n        if (isString(meta.style)) {\n          data.style = meta.style;\n        }\n        if (isString(meta.vspace)) {\n          data.vspace = meta.vspace;\n        }\n        if (isString(meta.border)) {\n          data.border = meta.border;\n        }\n        if (isString(meta.hspace)) {\n          data.hspace = meta.hspace;\n        }\n        if (isString(meta.borderstyle)) {\n          data.borderstyle = meta.borderstyle;\n        }\n      }\n    };\n    const formFillFromMeta = (info, api) => {\n      const data = api.getData();\n      const meta = data.src.meta;\n      if (meta !== undefined) {\n        const newData = deepMerge({}, data);\n        formFillFromMeta2(info, newData, meta);\n        api.setData(newData);\n      }\n    };\n    const calculateImageSize = (helpers, info, state, api) => {\n      const data = api.getData();\n      const url = data.src.value;\n      const meta = data.src.meta || {};\n      if (!meta.width && !meta.height && info.hasDimensions) {\n        if (isNotEmpty(url)) {\n          helpers.imageSize(url).then(size => {\n            if (state.open) {\n              api.setData({ dimensions: size });\n            }\n          }).catch(e => console.error(e));\n        } else {\n          api.setData({\n            dimensions: {\n              width: '',\n              height: ''\n            }\n          });\n        }\n      }\n    };\n    const updateImagesDropdown = (info, state, api) => {\n      const data = api.getData();\n      const image = ListUtils.findEntry(info.imageList, data.src.value);\n      state.prevImage = image;\n      api.setData({ images: image.map(entry => entry.value).getOr('') });\n    };\n    const changeSrc = (helpers, info, state, api) => {\n      addPrependUrl(info, api);\n      formFillFromMeta(info, api);\n      calculateImageSize(helpers, info, state, api);\n      updateImagesDropdown(info, state, api);\n    };\n    const changeImages = (helpers, info, state, api) => {\n      const data = api.getData();\n      const image = ListUtils.findEntry(info.imageList, data.images);\n      image.each(img => {\n        const updateAlt = data.alt === '' || state.prevImage.map(image => image.text === data.alt).getOr(false);\n        if (updateAlt) {\n          if (img.value === '') {\n            api.setData({\n              src: img,\n              alt: state.prevAlt\n            });\n          } else {\n            api.setData({\n              src: img,\n              alt: img.text\n            });\n          }\n        } else {\n          api.setData({ src: img });\n        }\n      });\n      state.prevImage = image;\n      changeSrc(helpers, info, state, api);\n    };\n    const changeFileInput = (helpers, info, state, api) => {\n      const data = api.getData();\n      api.block('Uploading image');\n      head(data.fileinput).fold(() => {\n        api.unblock();\n      }, file => {\n        const blobUri = URL.createObjectURL(file);\n        const finalize = () => {\n          api.unblock();\n          URL.revokeObjectURL(blobUri);\n        };\n        const updateSrcAndSwitchTab = url => {\n          api.setData({\n            src: {\n              value: url,\n              meta: {}\n            }\n          });\n          api.showTab('general');\n          changeSrc(helpers, info, state, api);\n        };\n        blobToDataUri(file).then(dataUrl => {\n          const blobInfo = helpers.createBlobCache(file, blobUri, dataUrl);\n          if (info.automaticUploads) {\n            helpers.uploadImage(blobInfo).then(result => {\n              updateSrcAndSwitchTab(result.url);\n              finalize();\n            }).catch(err => {\n              finalize();\n              helpers.alertErr(err);\n            });\n          } else {\n            helpers.addToBlobCache(blobInfo);\n            updateSrcAndSwitchTab(blobInfo.blobUri());\n            api.unblock();\n          }\n        });\n      });\n    };\n    const changeHandler = (helpers, info, state) => (api, evt) => {\n      if (evt.name === 'src') {\n        changeSrc(helpers, info, state, api);\n      } else if (evt.name === 'images') {\n        changeImages(helpers, info, state, api);\n      } else if (evt.name === 'alt') {\n        state.prevAlt = api.getData().alt;\n      } else if (evt.name === 'fileinput') {\n        changeFileInput(helpers, info, state, api);\n      } else if (evt.name === 'isDecorative') {\n        api.setEnabled('alt', !api.getData().isDecorative);\n      }\n    };\n    const closeHandler = state => () => {\n      state.open = false;\n    };\n    const makeDialogBody = info => {\n      if (info.hasAdvTab || info.hasUploadUrl || info.hasUploadHandler) {\n        const tabPanel = {\n          type: 'tabpanel',\n          tabs: flatten([\n            [MainTab.makeTab(info)],\n            info.hasAdvTab ? [AdvTab.makeTab(info)] : [],\n            info.hasUploadTab && (info.hasUploadUrl || info.hasUploadHandler) ? [UploadTab.makeTab(info)] : []\n          ])\n        };\n        return tabPanel;\n      } else {\n        const panel = {\n          type: 'panel',\n          items: MainTab.makeItems(info)\n        };\n        return panel;\n      }\n    };\n    const submitHandler = (editor, info, helpers) => api => {\n      const data = deepMerge(fromImageData(info.image), api.getData());\n      const finalData = {\n        ...data,\n        style: getStyleValue(helpers.normalizeCss, toImageData(data, false))\n      };\n      editor.execCommand('mceUpdateImage', false, toImageData(finalData, info.hasAccessibilityOptions));\n      editor.editorUpload.uploadImagesAuto();\n      api.close();\n    };\n    const imageSize = editor => url => {\n      if (!isSafeImageUrl(editor, url)) {\n        return Promise.resolve({\n          width: '',\n          height: ''\n        });\n      } else {\n        return getImageSize(editor.documentBaseURI.toAbsolute(url)).then(dimensions => ({\n          width: String(dimensions.width),\n          height: String(dimensions.height)\n        }));\n      }\n    };\n    const createBlobCache = editor => (file, blobUri, dataUrl) => {\n      var _a;\n      return editor.editorUpload.blobCache.create({\n        blob: file,\n        blobUri,\n        name: (_a = file.name) === null || _a === void 0 ? void 0 : _a.replace(/\\.[^\\.]+$/, ''),\n        filename: file.name,\n        base64: dataUrl.split(',')[1]\n      });\n    };\n    const addToBlobCache = editor => blobInfo => {\n      editor.editorUpload.blobCache.add(blobInfo);\n    };\n    const alertErr = editor => message => {\n      editor.windowManager.alert(message);\n    };\n    const normalizeCss = editor => cssText => normalizeCss$1(editor, cssText);\n    const parseStyle = editor => cssText => editor.dom.parseStyle(cssText);\n    const serializeStyle = editor => (stylesArg, name) => editor.dom.serializeStyle(stylesArg, name);\n    const uploadImage = editor => blobInfo => global$1(editor).upload([blobInfo], false).then(results => {\n      var _a;\n      if (results.length === 0) {\n        return Promise.reject('Failed to upload image');\n      } else if (results[0].status === false) {\n        return Promise.reject((_a = results[0].error) === null || _a === void 0 ? void 0 : _a.message);\n      } else {\n        return results[0];\n      }\n    });\n    const Dialog = editor => {\n      const helpers = {\n        imageSize: imageSize(editor),\n        addToBlobCache: addToBlobCache(editor),\n        createBlobCache: createBlobCache(editor),\n        alertErr: alertErr(editor),\n        normalizeCss: normalizeCss(editor),\n        parseStyle: parseStyle(editor),\n        serializeStyle: serializeStyle(editor),\n        uploadImage: uploadImage(editor)\n      };\n      const open = () => {\n        collect(editor).then(info => {\n          const state = createState(info);\n          return {\n            title: 'Insert/Edit Image',\n            size: 'normal',\n            body: makeDialogBody(info),\n            buttons: [\n              {\n                type: 'cancel',\n                name: 'cancel',\n                text: 'Cancel'\n              },\n              {\n                type: 'submit',\n                name: 'save',\n                text: 'Save',\n                primary: true\n              }\n            ],\n            initialData: fromImageData(info.image),\n            onSubmit: submitHandler(editor, info, helpers),\n            onChange: changeHandler(helpers, info, state),\n            onClose: closeHandler(state)\n          };\n        }).then(editor.windowManager.open);\n      };\n      return { open };\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mceImage', Dialog(editor).open);\n      editor.addCommand('mceUpdateImage', (_ui, data) => {\n        editor.undoManager.transact(() => insertOrUpdateImage(editor, data));\n      });\n    };\n\n    const hasImageClass = node => {\n      const className = node.attr('class');\n      return isNonNullable(className) && /\\bimage\\b/.test(className);\n    };\n    const toggleContentEditableState = state => nodes => {\n      let i = nodes.length;\n      const toggleContentEditable = node => {\n        node.attr('contenteditable', state ? 'true' : null);\n      };\n      while (i--) {\n        const node = nodes[i];\n        if (hasImageClass(node)) {\n          node.attr('contenteditable', state ? 'false' : null);\n          global.each(node.getAll('figcaption'), toggleContentEditable);\n        }\n      }\n    };\n    const setup = editor => {\n      editor.on('PreInit', () => {\n        editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n        editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n      });\n    };\n\n    const register = editor => {\n      editor.ui.registry.addToggleButton('image', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onAction: Dialog(editor).open,\n        onSetup: buttonApi => {\n          buttonApi.setActive(isNonNullable(getSelectedImage(editor)));\n          return editor.selection.selectorChangedWithUnbind('img:not([data-mce-object]):not([data-mce-placeholder]),figure.image', buttonApi.setActive).unbind;\n        }\n      });\n      editor.ui.registry.addMenuItem('image', {\n        icon: 'image',\n        text: 'Image...',\n        onAction: Dialog(editor).open\n      });\n      editor.ui.registry.addContextMenu('image', { update: element => isFigure(element) || isImage(element) && !isPlaceholderImage(element) ? ['image'] : [] });\n    };\n\n    var Plugin = () => {\n      global$4.add('image', editor => {\n        register$2(editor);\n        setup(editor);\n        register(editor);\n        register$1(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}