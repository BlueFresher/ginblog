{"ast":null,"code":"import { userInfo } from 'os';\nconst columns = [{\n  title: 'ID',\n  dataIndex: 'ID',\n  width: '10%',\n  key: 'id',\n  align: 'center'\n}, {\n  title: '用户名',\n  dataIndex: 'username',\n  width: '20%',\n  key: 'username',\n  align: 'center'\n}, {\n  title: '角色',\n  dataIndex: 'role',\n  width: '20%',\n  key: 'role',\n  scopedSlots: {\n    customRender: 'role'\n  },\n  align: 'center'\n}, {\n  title: '操作',\n  width: '30%',\n  key: 'action',\n  scopedSlots: {\n    customRender: 'action'\n  },\n  align: 'center'\n}];\nexport default {\n  data() {\n    return {\n      paginationOption: {\n        pageSizeOptions: ['5', '10', '20'],\n        defaultCurrent: 1,\n        defaultPageSize: 5,\n        total: 0,\n        showSizeChanger: true,\n        showTotal: total => `共${total}条`,\n        onChange: (current, pageSize) => {\n          this.paginationOption.defaultCurrent = current;\n          this.paginationOption.defaultPageSize = pageSize;\n          this.getUserList();\n        },\n        onshowSizeChange: (current, size) => {\n          this.paginationOption.defaultCurrent = current;\n          this.paginationOption.defaultPageSize = size;\n          this.getUserList();\n        }\n      },\n      userlist: [],\n      columns,\n      queryParam: {\n        username: '',\n        pagesize: 5,\n        pagenum: 1\n      },\n      userInfo: {\n        id: 0,\n        username: '',\n        password: '',\n        checkpass: '',\n        role: 2\n      },\n      visible: false,\n      addUserVisible: false,\n      userRules: {\n        password: [{\n          validator: (rule, value, callback) => {\n            if (this.userInfo.password == '') {\n              callback(new Error('请输入密码'));\n            }\n            if ([...this.userInfo.password].length < 6 || [...this.userInfo.password].length > 20) {\n              callback(new Error('密码应该在6-20个字符之间'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        checkpass: [{\n          validator: (rule, value, callback) => {\n            if (this.userInfo.checkpass == '') {\n              callback(new Error('请输入密码'));\n            }\n            if (this.userInfo.password != this.userInfo.checkpass) {\n              callback(new Error('密码不一致，请重新输入'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getUserList();\n  },\n  methods: {\n    // 查询用户列表\n    async getUserList() {\n      const {\n        data: res\n      } = await this.$http.get('users', {\n        params: {\n          username: this.queryParam.username,\n          pagesize: this.queryParam.pageSize,\n          pagenum: this.queryParam.pagenum\n        }\n      });\n      // console.log(res)\n      if (res.status != 200) return this.$message.error(res.message);\n      this.userlist = res.data;\n      this.paginationOption.total = res.total;\n    },\n    // 更改分页\n    handleTableChange(pagination, filters, sorter) {\n      var pager = {\n        ...this.pagination\n      };\n      pager.current = pagination.current;\n      pager.pageSize = pagination.pageSize;\n      this.queryParam.pagesize = pagination.pageSize;\n      this.queryParam.pagenum = pagination.current;\n      if (pagination.pageSize !== this.pagination.pageSize) {\n        this.queryParam.pagenum = 1;\n        pager.current = 1;\n      }\n      this.pagination = pager;\n      this.getUserList();\n    },\n    // 删除用户\n    deleteUser(id) {\n      this.$confirm({\n        title: '提示：请再次确认',\n        content: '确认要删除该用户么？一旦删除无法恢复',\n        onOk: async () => {\n          const res = await this.$http.delete(`user/${id}`);\n          if (res.status != 200) return this.$message.error(res.message);\n          this.$message.success('删除成功');\n          this.getUserList();\n          console.log(res);\n        },\n        onCancel: () => {\n          this.$message.info('已取消删除');\n        }\n      });\n    },\n    addUserOk() {},\n    addUserCancel() {\n      this.addUserVisible = false;\n    },\n    adminChange(value) {\n      this.userInfo.role = value;\n      console.log(this.userInfo.role);\n    }\n  }\n};","map":{"version":3,"mappings":"AA0DA;AAEA,iBACA;EACAA;EACAC;EACAC;EACAC;EACAC;AACA,GACA;EACAJ;EACAC;EACAC;EACAC;EACAC;AACA,GACA;EACAJ;EACAC;EACAC;EACAC;EACAE;IAAAC;EAAA;EACAF;AACA,GACA;EACAJ;EACAE;EACAC;EACAE;IAAAC;EAAA;EACAF;AACA,EACA;AAEA;EACAG;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;UACA;UACA;UACA;QACA;QACAC;UACA;UACA;UACA;QACA;MACA;MAEAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAJ;QACAK;QACAC;QACAC;MACA;MACAC;MACAC;MACAC,WACA;QACAL,UACA,CACA;UACAM;YACA;cACAC;YACA;YACA;cACAA;YACA;cACAA;YACA;UACA;UACAC;QACA,EACA;QACAP,WACA,CACA;UACAK;YACA;cACAC;YACA;YACA;cACAA;YACA;cACAA;YACA;UACA;UACAC;QACA;MAEA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACA;MACA;QAAA5B;MAAA;QACA6B;UACAhB;UACAC;UACAC;QACA;MACA;MACA;MACA;MACA;MACA;IACA;IACA;IACAe;MACA;QAAA;MAAA;MACAC;MACAA;MACA;MACA;MAEA;QACA;QACAA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;QACAvC;QACAwC;QACAC;UACA;UACA;UACA;UACA;UACAC;QACA;QACAC;UACA;QACA;MACA;IACA;IACAC,aAEA;IACAC;MACA;IACA;IACAC;MACA;MACAJ;IACA;EACA;AACA","names":["title","dataIndex","width","key","align","scopedSlots","customRender","data","paginationOption","pageSizeOptions","defaultCurrent","defaultPageSize","total","showSizeChanger","showTotal","onChange","onshowSizeChange","userlist","columns","queryParam","username","pagesize","pagenum","userInfo","id","password","checkpass","role","visible","addUserVisible","userRules","validator","callback","trigger","created","methods","params","handleTableChange","pager","deleteUser","content","onOk","console","onCancel","addUserOk","addUserCancel","adminChange"],"sourceRoot":"src/components/user","sources":["UserList.vue"],"sourcesContent":["<template>\n    <div>\n        <h3>用户列表页面</h3>\n        <a-card>\n            <a-row :gutter=\"20\">\n                <a-col :span=\"6\">\n                    <a-input-search v-model=\"queryParam.username\" placeholder=\"输入用户名查找\" enter-button allowClear @search=\"getUserList\"/>\n                </a-col>\n                <a-col :span=\"4\">\n                    <a-button type=\"primary\" @click=\"addUserVisible = true\">新增</a-button>\n                </a-col>\n            </a-row>\n\n            <a-table \n                rowKey=\"username\"\n                :columns=\"columns\"\n                :pagination='paginationOption' \n                :dataSource=\"userlist\"\n                bordered\n                @change=\"handleTableChange\">\n                <span slot=\"role\" solt-scope=\"role\">{{role = 1 ? '管理员':'订阅者'}}</span>\n                <template slot=\"action\" slot-scope=\"data\">\n                    <div class=\"actionSlot\">\n                        <a-button type=\"primary\" style=\"margin-right:15px\">编辑</a-button>\n                        <a-button type=\"danger\" @click=\"deleteUser(data.ID)\">删除</a-button>\n                    </div>\n                </template>\n            </a-table>\n        </a-card>\n\n        <!---新增用户区域-->\n        <a-modal\n        closable\n        title=\"新增用户\"\n        :visible=\"addUserVisible\"\n        @ok=\"addUserOk\"\n        @cancel=\"addUserCancel\"\n        destoryOnClose>\n        <a-form-model :model=\"userInfo\" :rules=\"userRules\" res=\"addUserRef\">\n            <a-form-model-item label=\"用户名\" prop=\"username\">\n                <a-input v-model=\"userInfo.username\"></a-input>\n            </a-form-model-item>\n            <a-form-model-item label=\"密码\" prop=\"password\">\n                <a-input-password v-model=\"userInfo.password\"></a-input-password>\n            </a-form-model-item>\n            <a-form-model-item label=\"确认密码\" prop=\"checkpass\"></a-form-model-item>\n            <a-input-password v-model=\"userInfo.checkpass\"></a-input-password>\n            <a-form-model-item label=\"是否为管理员\" prop=\"role\"></a-form-model-item>\n            <a-select defaultValue=\"2\" style=\"120px\" @change=\"adminChange\">\n                <a-select-option key=\"1\" value=\"1\">是</a-select-option>\n                <a-select-option key=\"2\" value=\"2\">否</a-select-option>\n            </a-select>\n        </a-form-model>\n      </a-modal>\n    </div>\n</template>\n\n<script>\nimport { userInfo } from 'os'\n\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'ID',\n        width:'10%',\n        key: 'id',\n        align:'center',\n   },\n   {\n        title: '用户名',\n        dataIndex: 'username',\n        width:'20%',\n        key: 'username',\n        align:'center',\n   },\n   {\n        title: '角色',\n        dataIndex: 'role',\n        width:'20%',\n        key: 'role',\n        scopedSlots:{customRender:'role'},\n        align:'center',\n   },\n   {\n        title: '操作',\n        width:'30%',\n        key: 'action',\n        scopedSlots:{customRender:'action'},\n        align:'center',\n   },\n]\n\nexport default{\n    data(){\n        return {\n            paginationOption:{\n                pageSizeOptions:['5', '10', '20'],\n                defaultCurrent:1,\n                defaultPageSize:5,\n                total:0,\n                showSizeChanger:true,\n                showTotal:(total)=>`共${total}条`,\n                onChange:(current, pageSize)=>{\n                    this.paginationOption.defaultCurrent = current\n                    this.paginationOption.defaultPageSize = pageSize\n                    this.getUserList()\n                },\n                onshowSizeChange:(current, size)=>{\n                    this.paginationOption.defaultCurrent = current\n                    this.paginationOption.defaultPageSize = size\n                    this.getUserList()\n                }\n            },\n\n            userlist:[],\n            columns,\n            queryParam:{\n                username:'',\n                pagesize:5,\n                pagenum:1,\n            },\n            userInfo:{\n                id:0,\n                username:'',\n                password:'',\n                checkpass:'',\n                role:2,\n            },\n            visible: false,\n            addUserVisible: false,\n            userRules:\n            {\n                password:\n                [\n                    {\n                        validator:(rule, value, callback) => {\n                            if (this.userInfo.password == '') {\n                                callback(new Error('请输入密码'))\n                            }\n                            if ([... this.userInfo.password].length < 6 || [... this.userInfo.password].length > 20){\n                                callback(new Error('密码应该在6-20个字符之间'))\n                            } else {\n                                callback()\n                            }\n                        }, \n                        trigger: 'blur',\n                    },\n                ],\n                checkpass:\n                [\n                    {\n                        validator:(rule, value, callback) => {\n                                if (this.userInfo.checkpass == '') {\n                                    callback(new Error('请输入密码'))\n                                }\n                                if (this.userInfo.password != this.userInfo.checkpass){\n                                    callback(new Error('密码不一致，请重新输入'))\n                                } else {\n                                    callback()\n                                }\n                            }, \n                            trigger: 'blur'\n                    }\n                ]\n            },\n        }\n    },\n    created(){\n        this.getUserList()\n    },\n    methods:{\n        // 查询用户列表\n        async getUserList() {\n            const { data:res } = await this.$http.get('users', {\n                params:{\n                    username:this.queryParam.username,\n                    pagesize:this.queryParam.pageSize, \n                    pagenum:this.queryParam.pagenum\n                }\n            })\n            // console.log(res)\n            if (res.status != 200) return this.$message.error(res.message)\n            this.userlist = res.data\n            this.paginationOption.total = res.total\n        },\n        // 更改分页\n        handleTableChange(pagination, filters, sorter) {\n        var pager = { ...this.pagination }\n        pager.current = pagination.current\n        pager.pageSize = pagination.pageSize\n        this.queryParam.pagesize = pagination.pageSize\n        this.queryParam.pagenum = pagination.current\n\n        if (pagination.pageSize !== this.pagination.pageSize) {\n            this.queryParam.pagenum = 1\n            pager.current = 1\n        }\n        this.pagination = pager\n        this.getUserList()\n        },\n        // 删除用户\n        deleteUser(id) {\n            this.$confirm({\n                title: '提示：请再次确认',\n                content: '确认要删除该用户么？一旦删除无法恢复',\n                onOk: async () => {\n                    const res = await this.$http.delete(`user/${id}`)\n                    if (res.status != 200) return this.$message.error(res.message)\n                    this.$message.success('删除成功')\n                    this.getUserList()\n                    console.log(res)\n                },\n                onCancel: () => {\n                    this.$message.info('已取消删除')\n                },\n            });\n        },\n        addUserOk(){\n\n        },\n        addUserCancel(){\n            this.addUserVisible = false\n        },\n        adminChange(value){\n            this.userInfo.role = value\n            console.log(this.userInfo.role)\n        }\n    },\n}\n</script>\n\n<style scoped>\n.actionSlot{\n    display: flex;\n    justify-content: center;\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}