{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      cateList: [],\n      searchName: '',\n      valid: true,\n      registerformvalid: true,\n      formdata: {\n        username: '',\n        password: ''\n      },\n      checkPassword: '',\n      dialog: false,\n      headers: {\n        Authorization: '',\n        username: ''\n      },\n      nameRules: [v => !!v || '用户名不能为空', v => v && v.length >= 4 && v.length <= 12 || '用户名必须在4到12个字符之间'],\n      passwordRules: [v => !!v || '密码不能为空', v => v && v.length >= 6 && v.length <= 20 || '密码必须在6到20个字符之间', v => v === this.formdata.password || '密码两次输入不一致，请检查'],\n      checkPasswordRules: [v => !!v || '密码不能为空', v => v && v.length >= 6 && v.length <= 20 || '密码必须在6到20个字符之间', v => v === this.formdata.password || '密码两次输入不一致，请检查']\n    };\n  },\n  created() {\n    this.GetCateList();\n  },\n  mounted() {\n    this.headers = {\n      Authorization: `Bearer ${window.sessionStorage.getItem('token')}`,\n      username: window.sessionStorage.getItem('username')\n    };\n  },\n  methods: {\n    // 获取分类\n    async GetCateList() {\n      const {\n        data: res\n      } = await this.$http.get('category');\n      this.cateList = res.data;\n    },\n    gotoCate(cid) {\n      this.$router.push(`/category/${cid}`).catch(err => err);\n    },\n    // 通过标题查找文章\n    searchTitle(title) {\n      if (title.length == 0) return this.$message.error('请输入查找文章标题');\n      this.$router.push('/search/${title}');\n    },\n    async login() {\n      if (!this.$refs.loginFormRef.validate()) return this.$message.error('输入数据非法，请检查输入的用户名和密码');\n      const {\n        data: res\n      } = await this.$http.post('loginfront', this.formdata);\n      if (res.status !== 200) return this.$message.error(res.message);\n      console.log(res);\n      window.sessionStorage.setItem('username', res.data);\n      window.sessionStorage.setItem('user_id', res.id);\n      // this.$message.success('登录成功')\n      // this.$router.go(val) => 在history记录中前进或者后退val步，当val为0时刷新当前页面。\n      this.$router.go(0);\n    },\n    // 退出\n    loginout() {\n      window.sessionStorage.clear('token');\n      window.sessionStorage.clear('username');\n      // this.$message.success('退出成功')\n      this.$router.go(0);\n    },\n    // 注册\n    async registerUser() {\n      if (!this.$refs.registerformRef.validate()) return this.$message.error('输入数据非法，请检查输入的用户名和密码');\n      const {\n        data: res\n      } = await this.$http.post('user/add', {\n        username: this.formdata.username,\n        password: this.formdata.password,\n        role: 2\n      });\n      if (res.status !== 200) return this.$message.error(res.message);\n      // this.$message.success('注册成功')\n      this.$router.go(0);\n    }\n  }\n};","map":{"version":3,"mappings":";AA8GA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;QACAC;QACAL;MACA;MACAM,YACAC,uBACAA,KACAA,wCACA,kBACA;MACAC,gBACAD,sBACAA,KACAA,0DACAA,qDACA;MACAE,qBACAF,sBACAA,KACAA,0DACAA;IAEA;EACA;EACAG;IACA;EACA;EACAC;IACA;MACAN;MACAL;IACA;EACA;EACAY;IACA;IACA;MACA;QAAAlB;MAAA;MACA;IACA;IAEAmB;MACA;IACA;IAEA;IACAC;MACA;MACA;IACA;IAEA;MACA,yCACA;MACA;QAAApB;MAAA;MACA;MACAqB;MACAC;MACAA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACAD;MACAA;MACA;MACA;IACA;IAEA;IACA;MACA,4CACA;MACA;QAAAtB;MAAA;QACAM;QACAC;QACAiB;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["data","cateList","searchName","valid","registerformvalid","formdata","username","password","checkPassword","dialog","headers","Authorization","nameRules","v","passwordRules","checkPasswordRules","created","mounted","methods","gotoCate","searchTitle","console","window","loginout","role"],"sourceRoot":"src/components","sources":["TopBar.vue"],"sourcesContent":["<template>\n    <div>\n        <v-app-bar app color=\"indigo darken-2\">\n          <v-avatar class=\"mx-12\" size=\"40\" color=\"grey\"></v-avatar>\n            <v-container class=\"py-0 file-height justify-center\">\n              <v-btn text color=\"white\" @click=\"$router.push('/')\">首页</v-btn>\n              <v-btn v-for=\"item in cateList\" :key=\"item.id\" text color=\"white\" @click=\"gotoCate(item.id)\">{{item.name}}</v-btn>\n            </v-container>\n\n            <v-spacer></v-spacer>\n\n            <v-responsive max-width=\"260\" color=\"white\">\n              <v-text-field \n                dense \n                flat \n                hide-details \n                solo-inverted \n                rounded \n                dark\n                placeholder=\"请输入文章标题查找\"\n                append-icon=\"mdi-text-search\"\n                v-model=\"searchName\"\n                @change=\"searchTitle(searchName)\">\n              </v-text-field>\n            </v-responsive>\n\n          <v-dialog max-width=\"800\">\n            <template v-slot:activator=\"{on, attrs}\">\n              <v-btn v-if=\"!headers.username\" text dark v-bind=\"attrs\" v-on=\"on\">请登录</v-btn>\n              <v-btn v-if=\"headers.username\" text dark>欢迎你{{headers.username}}</v-btn>\n              <v-btn class=\"hidden-md-and-down\" v-if=\"headers.username\" text dark @click=\"loginout\">退出</v-btn>\n            </template>\n\n            <template v-slot:default=\"dialog\">\n              <v-card>\n                <v-toolbar color=\"indigo darken-2\">请登录</v-toolbar>\n                <v-form ref=\"loginFormRef\" v-model=\"valid\">\n                  <v-card-text class=\"mt-5\">\n                    <v-text-field \n                    v-model=\"formdata.username\"\n                    hint=\"至少四个字符\"\n                    counter=\"12\"\n                    :rules=\"nameRules\"\n                    label=\"请输入用户名\">\n                    </v-text-field>\n\n                    <v-text-field\n                    v-model=\"formdata.password\"\n                    hint=\"至少6个字符\"\n                    counter=\"20\"\n                    :rules=\"passwordRules\"\n                    label=\"请输入密码\">\n                    </v-text-field>\n                  </v-card-text>\n                  <v-card-actions class=\"justify-end\">\n                    <v-btn text @click=\"login\">确定</v-btn>\n                    <v-btn text @click=\"dialog.value=false\">取消</v-btn>\n                  </v-card-actions>\n                </v-form>\n              </v-card>\n            </template>\n          </v-dialog> \n\n          <v-dialog max-width=\"800\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn v-if=\"!headers.username\" text dark v-bind=\"attrs\" v-on=\"on\">注册</v-btn>\n            </template>\n            <template v-slot:default=\"dialog\">\n              <v-form ref=\"registerformRef\" v-model=\"registerformvalid\">\n                <v-card>\n                  <v-toolbar color=\"indigo darken-2\" dark>欢迎注册</v-toolbar>\n                  <v-card-text class=\"mt-5\">\n                    <v-text-field\n                      v-model=\"formdata.username\"\n                      hint=\"至少4个字符\"\n                      counter=\"12\"\n                      :rules=\"nameRules\"\n                      label=\"请输入用户名\"\n                    ></v-text-field>\n                    <v-text-field\n                      v-model=\"formdata.password\"\n                      :rules=\"passwordRules\"\n                      hint=\"至少6个字符\"\n                      counter=\"20\"\n                      label=\"请输入密码\"\n                      type=\"password\"\n                    ></v-text-field>\n                    <v-text-field\n                      v-model=\"checkPassword\"\n                      :rules=\"checkPasswordRules\"\n                      hint=\"至少6个字符\"\n                      counter=\"20\"\n                      label=\"请确认密码\"\n                      type=\"password\"\n                    ></v-text-field>\n                  </v-card-text>\n                  <v-card-actions class=\"justify-end\">\n                    <v-btn text @click=\"registerUser\">确定</v-btn>\n                    <v-btn text @click=\"dialog.value = false\">取消</v-btn>\n                  </v-card-actions>\n                </v-card>\n              </v-form>\n            </template>\n          </v-dialog>\n\n        </v-app-bar>\n    </div>\n</template>\n  \n  <script>\n    export default {\n      data() {\n        return {\n          cateList:[],\n          searchName: '',\n          valid: true,\n          registerformvalid: true,\n          formdata: {\n            username:'',\n            password:''\n          },\n          checkPassword: '',\n          dialog: false,\n          headers: {\n            Authorization: '',\n            username: ''\n          },\n          nameRules:[\n            (v) => !!v || '用户名不能为空',\n            (v) =>\n              (v && v.length >= 4 && v.length <= 12) ||\n              '用户名必须在4到12个字符之间'\n          ],\n          passwordRules: [\n            (v) => !!v || '密码不能为空',\n            (v) =>\n              (v && v.length >= 6 && v.length <= 20) || '密码必须在6到20个字符之间',\n            (v) => v === this.formdata.password || '密码两次输入不一致，请检查'\n          ],\n          checkPasswordRules: [\n            (v) => !!v || '密码不能为空',\n            (v) =>\n              (v && v.length >= 6 && v.length <= 20) || '密码必须在6到20个字符之间',\n            (v) => v === this.formdata.password || '密码两次输入不一致，请检查'\n          ]\n        }\n      },\n      created(){\n        this.GetCateList()\n      },\n      mounted() {\n        this.headers = {\n          Authorization: `Bearer ${window.sessionStorage.getItem('token')}`,\n          username: window.sessionStorage.getItem('username')\n        }\n      },\n      methods: {\n        // 获取分类\n        async GetCateList(){\n          const {data:res} = await this.$http.get('category')\n          this.cateList = res.data\n        },\n        \n        gotoCate(cid) {\n          this.$router.push(`/category/${cid}`).catch((err) => err)\n        },\n\n        // 通过标题查找文章\n        searchTitle(title) {\n          if(title.length == 0) return this.$message.error('请输入查找文章标题')\n          this.$router.push('/search/${title}')\n        },\n\n        async login() {\n          if (!this.$refs.loginFormRef.validate())\n            return this.$message.error('输入数据非法，请检查输入的用户名和密码')\n          const { data: res } = await this.$http.post('loginfront', this.formdata)\n          if (res.status !== 200) return this.$message.error(res.message)\n          console.log(res)\n          window.sessionStorage.setItem('username', res.data)\n          window.sessionStorage.setItem('user_id', res.id)\n          // this.$message.success('登录成功')\n          // this.$router.go(val) => 在history记录中前进或者后退val步，当val为0时刷新当前页面。\n          this.$router.go(0)\n        },\n\n        // 退出\n        loginout() {\n          window.sessionStorage.clear('token')\n          window.sessionStorage.clear('username')\n          // this.$message.success('退出成功')\n          this.$router.go(0)\n        },\n\n        // 注册\n        async registerUser() {\n          if (!this.$refs.registerformRef.validate()) \n            return this.$message.error('输入数据非法，请检查输入的用户名和密码')\n            const { data: res } = await this.$http.post('user/add', {\n              username: this.formdata.username,\n              password: this.formdata.password,\n              role: 2\n            })\n            if (res.status !== 200) return this.$message.error(res.message)\n            // this.$message.success('注册成功')\n            this.$router.go(0)\n        }\n      },\n    }\n  </script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}