{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      cateList: [],\n      searchName: '',\n      valid: true,\n      registerformvalid: true,\n      formdata: {\n        username: '',\n        password: ''\n      },\n      checkPassword: '',\n      dialog: false,\n      headers: {\n        Authorization: '',\n        username: ''\n      },\n      nameRules: [v => !!v || '用户名不能为空', v => v && v.length >= 4 && v.length <= 12 || '用户名必须在4到12个字符之间'],\n      passwordRules: [v => !!v || '密码不能为空', v => v && v.length >= 6 && v.length <= 20 || '密码必须在6到20个字符之间', v => v === this.formdata.password || '密码两次输入不一致，请检查'],\n      checkPasswordRules: [v => !!v || '密码不能为空', v => v && v.length >= 6 && v.length <= 20 || '密码必须在6到20个字符之间', v => v === this.formdata.password || '密码两次输入不一致，请检查']\n    };\n  },\n  created() {\n    this.GetCateList();\n  },\n  mounted() {\n    this.headers = {\n      Authorization: `Bearer ${window.sessionStorage.getItem('token')}`,\n      username: window.sessionStorage.getItem('username')\n    };\n  },\n  methods: {\n    // 获取分类\n    async GetCateList() {\n      const {\n        data: res\n      } = await this.$http.get('category');\n      this.cateList = res.data;\n    },\n    gotoCate(cid) {\n      this.$router.push(`/category/${cid}`).catch(err => err);\n    },\n    // 通过标题查找文章\n    searchTitle(title) {\n      if (title.length == 0) return this.$message.error('请输入查找文章标题');\n      this.$router.push(`/search/${title}`);\n    },\n    async login() {\n      if (!this.$refs.loginFormRef.validate()) return this.$message.error('输入数据非法，请检查输入的用户名和密码');\n      const {\n        data: res\n      } = await this.$http.post('loginfront', this.formdata);\n      if (res.status != 200) return this.$message.error(res.message);\n      console.log(res);\n      window.sessionStorage.setItem('username', res.data);\n      window.sessionStorage.setItem('user_id', res.id);\n      // this.$message.success('登录成功')\n      // this.$router.go(val) => 在history记录中前进或者后退val步，当val为0时刷新当前页面。\n      this.$router.go(0);\n    },\n    // 退出\n    loginout() {\n      window.sessionStorage.clear('token');\n      window.sessionStorage.clear('username');\n      // this.$message.success('退出成功')\n      this.$router.go(0);\n    },\n    // 注册\n    async registerUser() {\n      if (!this.$refs.registerformRef.validate()) return this.$message.error('输入数据非法，请检查输入的用户名和密码');\n      const {\n        data: res\n      } = await this.$http.post('user/add', {\n        username: this.formdata.username,\n        password: this.formdata.password,\n        role: 2\n      });\n      if (res.status !== 200) return this.$message.error(res.message);\n      // this.$message.success('注册成功')\n      this.$router.go(0);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}